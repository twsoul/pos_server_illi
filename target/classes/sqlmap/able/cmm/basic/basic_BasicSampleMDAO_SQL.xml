<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="able.basic.service.dao.BasicSampleMDAO">
    <select id="versionCheck" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT OS_VERSION
              FROM GDCLOPDA.MOBILE_VERSION_CHECK
        ]]>
    </select>
    <select id="getAuthCheckNInfo" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT DRIV_ID AS USER_ID,
                   DRIV_NM AS USER_NM,
                   USE_FLAG AS USE_YN,
                   COPORATE_CD AS CORPORATE_CD,
                   NVL(PLANT_CD,'') AS PLANT_CD,
                   NVL(PASSWD,'') AS USER_PW,
                   NVL(VENDOR_CD,'') AS VENDOR_CD,
                   MOBL_AUTH_CD,
                   FIRST_LOGIN_DT,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'BOX_BAR_UPPER_YN' AND COPORATE_CD = A.COPORATE_CD
                                        AND USE_YN = 'Y') THEN 'N'
                        ELSE 'Y'
                   END UPPER_FLAG
              FROM GDCLOPDA.U_LO_CAR_DRIV_CD A
             WHERE DRIV_ID = TRIM(#{ID})
               AND USE_FLAG = 'Y';
        ]]>
    </select>
    <insert id="changePW" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.CHANGEPW
                (
                    #{ID}, #{PW}, #{PW_TMS},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="get_pda_MenuList" parameterType="hashmap" resultType="hashmap">
        <![CDATA[ 
            SELECT  MN.*, /* Query ID=neoPlex.portal.comm.menu.service.dao.CommMenuMDAO.userSiteMapList */
                    DF.SCR_TYPE
            FROM (
                    SELECT ROWNUM AS RN,
                    LEVEL AS LV,
                    ORG_PARENT_CD,
                    ORG_CD,
                    A.SCR_ID,
                    (SELECT CASE WHEN MSG_TEXT IS NULL OR MSG_TEXT = '' THEN D.SCR_NM ELSE B.MSG_TEXT END SCR_NM 
                       FROM GDCLOPDA.C_SCR_DESC_DF D
                       LEFT OUTER JOIN C_MESSAGE_CD  B
                         ON D.MSG_KEY = B.MSG_KEY
                        AND B.MSG_TYPE = 'U'
                        AND B.MSG_LANGUAGE = 'ko_KR'
                        AND B.USE_YN = 'Y'
                      WHERE D.SCR_ID = A.SCR_ID
                        AND D.ORG_CD = A.ORG_CD
                        AND D.ORG_PARENT_CD = A.ORG_PARENT_CD                
                    ) AS SCR_NM,
                    SCR_DESC,
               DECODE(SCR_PARENT_ID, '*', '', SCR_PARENT_ID) AS SCR_PARENT_ID,
               SCR_LV,
               SCR_SORT,
               SCR_URL,
               SCR_GUBN,
               WIDGET_YN,
               WIDGET_DIV_PATH,
               A.USE_YN,
               A.RGN_DT,
               A.RGN_ID,
               A.RGN_IP,
               A.CHGR_DT,
               A.CHGR_ID,
               A.CHGR_IP,
               CASE WHEN (
                SELECT
                    NVL(SUM(CASE WHEN DF.SCR_ID=FN.SCR_ID THEN 1 ELSE 0 END),0)
         FROM GDCLOPDA.C_SCR_DESC_DF DF 
                LEFT OUTER JOIN C_SCR_FUNC_DF FN
                ON DF.SCR_ID=FN.SCR_ID
                AND FN.USR_GRP_CD IN (SELECT USR_GRP_CD FROM GDCLOPDA.C_USER_GRP_MAP WHERE USER_ID = #{ID} AND USE_YN = 'Y')
                AND FN.SCR_TYPE = 'S'  AND FN.USE_YN = 'Y'
                START WITH DF.ORG_PARENT_CD =A.ORG_PARENT_CD AND DF.ORG_CD=A.ORG_CD AND DF.SCR_ID=A.SCR_ID
                CONNECT BY PRIOR DF.SCR_ID = SCR_PARENT_ID AND PRIOR ORG_PARENT_CD = ORG_PARENT_CD AND PRIOR ORG_CD = ORG_CD
                ) > 0 THEN 'Y' 
                ELSE 'N' END AS USE_FLAG,
                (
                    SELECT MAX('HOME' || SYS_CONNECT_BY_PATH(DECODE(CONNECT_BY_ISLEAF, 1, CASE WHEN MSG_TEXT IS NULL OR MSG_TEXT = '' THEN AA.SCR_NM ELSE BB.MSG_TEXT END, CASE WHEN MSG_TEXT IS NULL OR MSG_TEXT = '' THEN AA.SCR_NM ELSE BB.MSG_TEXT END), ' > ')) AS PATH_STR
                      FROM GDCLOPDA.C_SCR_DESC_DF AA
                      LEFT OUTER JOIN C_MESSAGE_CD BB
                        ON AA.MSG_KEY = BB.MSG_KEY
                       AND BB.MSG_TYPE = 'U'
                       AND BB.MSG_LANGUAGE = 'ko_KR'
                       AND BB.USE_YN = 'Y'
                     WHERE 1=1
                       AND SCR_ID  = A.SCR_ID
                       AND ORG_CD  = A.ORG_CD
                       AND ORG_PARENT_CD  = A.ORG_PARENT_CD
                     START WITH  AA.SCR_LV = 1 
                   CONNECT BY PRIOR SCR_ID = SCR_PARENT_ID AND PRIOR ORG_PARENT_CD = ORG_PARENT_CD AND PRIOR ORG_CD = ORG_CD
                )  AS PATH_STR,
                FLG2
                FROM GDCLOPDA.C_SCR_DESC_DF A
                WHERE 1=1
                
                 START WITH SCR_LV = 1 AND SCR_ID = 'S90000664'
                 CONNECT BY PRIOR SCR_ID = SCR_PARENT_ID AND PRIOR ORG_PARENT_CD = ORG_PARENT_CD AND PRIOR ORG_CD = ORG_CD
                 ORDER SIBLINGS BY SCR_SORT, A.SCR_NM
                 ) MN
                 LEFT OUTER JOIN (
                 
                                    SELECT SCR_ID, SCR_TYPE, MAX(SORT) AS SORT
                                    FROM GDCLOPDA.C_SCR_FUNC_DF
                                    WHERE USR_GRP_CD IN (SELECT USR_GRP_CD FROM GDCLOPDA.C_USER_GRP_MAP WHERE USER_ID = #{ID} AND USE_YN = 'Y')
                                      AND USE_YN = 'Y'
                                    GROUP BY SCR_ID, SCR_TYPE                                
                                 ) DF ON MN.SCR_ID = DF.SCR_ID
                WHERE MN.WIDGET_YN = 'N' AND MN.USE_YN = 'Y' AND MN.USE_FLAG = 'Y'
            AND MN.ORG_PARENT_CD   = 'H'
            AND MN.ORG_CD          = 'LO'
        ]]>

        <if test="PRT_ID != null and PRT_ID != ''">
            <![CDATA[ AND MN.SCR_PARENT_ID = #{PRT_ID} ]]>
        </if>
        
        <if test="SCR_ID != null and SCR_ID != ''">
            <![CDATA[ AND MN.SCR_ID = #{SCR_ID} ]]>
        </if>
         
        <if test="LVL != null and LVL != ''">
             <![CDATA[ AND MN.SCR_LV = #{LVL} ]]>
        </if>
                
        ORDER BY MN.RN, DF.SORT;
    </select>
    <select id="get_pda_LangList" parameterType="hashmap" resultType="hashmap">
        SELECT LANG_GB,
               MSG_TYPE,
               LANG_KEY,
               MSG_DESC
          FROM GDCLOPDA.U_LO_COM_LANG_DF
         WHERE USE_YN ='Y';
    </select>
    <select id="selectComboPlantCode" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PLANT_CD AS VALUE,
                   CASE WHEN #{LANG} = 'KO' THEN PLANT_NM_KR
                        WHEN #{LANG} = 'EN' THEN PLANT_NM_EN
                        ELSE PLANT_NM_LC
                   END AS TEXT,
                   COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END AS COM_NM,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'PDA01'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END LINE_CD_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'FIFO01'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END SCM_FIFO_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'BOX02'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END CNTR_BAR_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'ETC01'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END ETC_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'KD01'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END BOX_BAR_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'IN03'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END INSP_FIND_YN,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_CNTR_FLOW_MA
                                      WHERE CNTR_CD = 'IN02'
                                        AND USE_FLAG = 'Y'
                                        AND COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD) THEN 'Y'
                        ELSE 'N' END OVER_CHK_FLAG
              FROM GDCLOPDA.U_CC_PLANT_CD A,
                   GDCLOPDA.U_LO_COM_DET_DF B
             WHERE A.COPORATE_CD = B.COPORATE_CD(+)
               AND A.PLANT_CD = B.COM_CD_REF1(+)
               AND B.COM_TYPE_CD(+) = 'SUBCONTRACT_VENDOR'
               AND A.USE_FLAG = B.USE_YN(+)
               AND A.USE_FLAG = 'Y'    
               AND A.COPORATE_CD IN (SELECT COPORATE_CD FROM GDCLOPDA.U_CC_COPORATE_CD WHERE ERP_COPORATE_CD = #{WERKS} AND USE_FLAG = 'Y')
             ORDER BY DISP_SEQ;
        ]]>
    </select>
    <select id="selectComboLocCode" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   LOC_NM,
                   LOC_TP_TYPE
              FROM GDCLOPDA.U_LO_LOC_MA
             WHERE PLANT_CD = #{PLANT}
               AND USE_FLAG = 'Y'
        ]]>
        <if test="TYPE != null and TYPE.size != 0">     
            <![CDATA[ AND LOC_TP_TYPE IN]]>
            <foreach collection="TYPE" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
             ORDER BY LOC_TP;
    </select>
    <select id="selectComboLocCodeLP" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   LOC_NM,
                   LOC_TP_TYPE
              FROM GDCLOPDA.U_LO_LOC_MA
             WHERE PLANT_CD = #{PLANT}
               AND SUBSTR(LOC_TP,-1) = '0'
               AND USE_FLAG = 'Y'
               AND LOC_TP_TYPE = '10' 
               ORDER BY LOC_TP;
        ]]>
    </select>
    <select id="selectComboLocCodeKD" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   LOC_NM,
                   LOC_TP_TYPE
              FROM GDCLOPDA.U_LO_LOC_MA
             WHERE PLANT_CD = #{PLANT}
               AND SUBSTR(LOC_TP,-1) <> '0'
               AND USE_FLAG = 'Y'
               AND LOC_TP_TYPE = '10' 
               ORDER BY LOC_TP;
        ]]>
    </select>
    <select id="selectComboLocCodeEtc" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   LOC_NM,
                   LOC_TP_TYPE
              FROM GDCLOPDA.U_LO_LOC_MA
             WHERE PLANT_CD = #{PLANT}
               AND USE_FLAG = 'Y'
        ]]>
        <if test="TYPE != null and TYPE.size != 0">     
            <![CDATA[ AND LOC_TP_TYPE IN]]>
            <foreach collection="TYPE" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <![CDATA[
             UNION
            SELECT LOC_TP,
                   LOC_NM,
                   LOC_TP_TYPE
              FROM GDCLOPDA.U_LO_LOC_MA
             WHERE PLANT_CD = #{PLANT}
               AND USE_FLAG = 'Y'
               AND LOC_TP IN (SELECT COM_CD_REF2
                                FROM GDCLOPDA.U_LO_COM_DET_DF
                               WHERE COM_TYPE_CD = 'PDA_LOC_TP_LIST'
                                 AND COM_CD_REF1 = #{PLANT})
             ORDER BY LOC_TP;
         ]]>
    </select>    
    <select id="selectVwCaseNo" parameterType="hashmap" resultType="hashmap">
            SELECT MAX(CASE_NO) CASE_NO,
                   MAX(BLNO) BLNO,
                   MAX(CONT_NO) CONT_NO,
                   SUM(BAR_QTY) BAR_QTY,
                   NVL(MAX(HOLD_FLAG),'N') HOLD_FLAG,
                   CASE WHEN MAX(ORD_NO) IS NULL THEN 'N'
                        ELSE 'Y'
                   END OUT_FLAG,
                   MAX(WH_CD) || MAX(LOC_CD) || MAX(RACK_CD) AS RACK
              FROM GDCLOPDA.U_LO_CASE_MST_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND LOC_TP = #{LOC_TP}
            <choose>
            <when test="LOGI_CD != null and LOGI_CD != ''">
                <![CDATA[
                    AND VEND_CD = #{LOGI_CD}
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    AND VEND_CD = 'TRAN'
                ]]>
            </otherwise>
            </choose>
               AND CASE_BAR_NO = #{CASE_NO}
               AND USE_FLAG = 'Y';
    </select>
    <select id="selectVwCaseOnly" parameterType="hashmap" resultType="hashmap">
            SELECT CASE_NO,
                   PART_CD,
                   BAR_QTY,
                   BLNO,
                   CONT_NO,
                   NVL(HOLD_FLAG,'N') HOLD_FLAG
              FROM GDCLOPDA.U_LO_CASE_MST_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND LOC_TP = #{LOC_TP}
            <choose>
            <when test="LOGI_CD != null and LOGI_CD != ''">
                <![CDATA[
                    AND VEND_CD = #{LOGI_CD}
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    AND VEND_CD = 'TRAN'
                ]]>
            </otherwise>
            </choose>
               AND CASE_BAR_NO = #{CASE_NO}
               AND USE_FLAG = 'Y';
    </select>
    <select id="selectVwBoxNo" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PLANT_CD,
                   BOX_NO,
                   PART_CD,
                   BAR_QTY,
                   NVL(HOLD_FLAG,'N') HOLD_FLAG,
                   LOC_TP
              FROM GDCLOPDA.U_LO_BOX_MA 
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND BOX_NO = NVL(SUBSTR(#{BOX_BAR_NO},10,INSTR(#{BOX_BAR_NO},':P')-10),#{BOX_BAR_NO})
               AND USE_FLAG = 'Y'
               AND ROWNUM = 1                
             UNION ALL               
            SELECT A.PLANT_CD PLANT_CD,
                   A.BOX_NO BOX_NO, 
                   A.PART_CD PART_CD,
                   A.QTY AS BAR_QTY,
                   NVL(MAX(B.HOLD_FLAG),'N') HOLD_FLAG,
                   B.LOC_TP LOC_TP
              FROM GDCLOPDA.U_LO_VW_CASE_BOX_BAR_MA A,
                   GDCLOPDA.U_LO_CASE_MST_MA B
             WHERE A.PLANT_CD = B.PLANT_CD
               AND B.CASE_NO = A.CASE_NO
               AND A.USE_FLAG = B.USE_FLAG
               AND B.ORD_NO IS NULL
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.BOX_NO = NVL(SUBSTR(#{BOX_BAR_NO},10,INSTR(#{BOX_BAR_NO},':P')-10),#{BOX_BAR_NO})
               AND A.USE_FLAG = 'Y'
             GROUP BY A.PLANT_CD,A.BOX_NO,A.PART_CD,A.QTY,B.LOC_TP;
        ]]>
    </select>
    <select id="selectBoxNoIn" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(입고이전) -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   PART_CD,
                   BAR_QTY,
                   VENDOR_CD,
                   LOT_NO,
                   BOX_BAR_NO,
                   'Y' BOX_YN
              FROM GDCLOPDA.U_LO_BOX_HI A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND BOX_NO = NVL(SUBSTR(#{BOX_BAR_NO},
                                          10,
                                          INSTR(#{BOX_BAR_NO},':P')-10),#{BOX_BAR_NO})
               AND ROWNUM  =1                
             UNION ALL               
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   PART_CD,
                   BAR_QTY,
                   VENDOR_CD,
                   LOT_NO,
                   BOX_BAR_NO,
                   'N' BOX_YN
              FROM GDCLOPDA.U_LO_BOX_VITUAL_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND BOX_BAR_NO = #{BOX_BAR_NO}
               AND ROWNUM = 1 
             
        ]]>
    </select>
    <select id="selectBoxNoInTemp" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(입고이전,임시데이터) -->
            SELECT COPORATE_CD, PLANT_CD, BOX_NO, PART_CD, BAR_QTY, VENDOR_CD, LOT_NO, BOX_BAR_NO, BOX_YN
            FROM   (SELECT COPORATE_CD, PLANT_CD, BOX_NO, PART_CD, BAR_QTY, VENDOR_CD, LOT_NO, BOX_BAR_NO, BOX_YN,
                           ROW_NUMBER() OVER(PARTITION BY BOX_NO ORDER BY BOX_YN DESC) as RowIdx
                    FROM   (SELECT COPORATE_CD, PLANT_CD, BOX_NO, PART_CD, BAR_QTY, VENDOR_CD, LOT_NO, BOX_BAR_NO, 'Y' BOX_YN
                            FROM   GDCLOPDA.U_LO_BOX_HI
                            WHERE  COPORATE_CD = #{COPORATE_CD}
                            AND    BOX_NO IN
                                   <foreach collection="BOX_BAR_NO" item="item" index="index" open="(" separator="," close=")">
                                       NVL(SUBSTR(#{item},10,INSTR(#{item},':P')-10),#{item})
                                   </foreach>            
                            UNION ALL        
                            SELECT COPORATE_CD, PLANT_CD, BOX_NO, PART_CD, BAR_QTY, VENDOR_CD, LOT_NO, BOX_BAR_NO, 'N' BOX_YN
                            FROM   GDCLOPDA.U_LO_BOX_VITUAL_MA
                            WHERE  COPORATE_CD = #{COPORATE_CD}
                            AND    BOX_BAR_NO IN
                                   <foreach collection="BOX_BAR_NO" item="item" index="index" open="(" separator="," close=")">
                                       #{item}
                                   </foreach>
                           )
                   )
            WHERE RowIdx = 1
            ORDER BY INSTR(
                  <foreach collection="BOX_BAR_NO" item="item" index="index" open="" separator="||" close="">
                    #{item}
                  </foreach>
                  , BOX_BAR_NO);
    </select>
    <select id="selectBoxNo" parameterType="hashmap" resultType="hashmap"><!-- 부품식별표 조회(입고이후) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   C.LOC_TP_TYPE,
                   A.TRANS_TYPE,
                   A.BOX_NO,
                   A.MAKE_SEQ,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN D.PART_NM_KR
                        WHEN #{LANG} = 'EN' THEN D.PART_NM_EN
                        ELSE D.PART_NM_LC
                   END PART_NM,
                   (SELECT COUNT(*) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0
                      AND LOC_TP = A.LOC_TP) TOTAL_QTY,
                   A.BAR_QTY,
                   D.BASIC_UNIT,
                   A.VENDOR_CD,
                   A.WH_CD,
                   A.LOC_CD,
                   A.RACK_CD,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   A.LOT_NO,
                   A.PRE_INSP_DTTM,
                   NVL(A.INSP_FLAG, 'N') INSP_FLAG,
                   NVL(A.DKIND, 'N') DKIND,
                   NVL(A.CONF_F, 'N') CONF_F,
                   NVL(A.SEL_FLAG, 'N') SEL_FLAG,
                   NVL(D.LACE_DIF_FLAG, 'N') LACE_DIF_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF4,'N') = 'Y') THEN 'N'
                        ELSE 'Y'
                   END ETC_OUT_CHK,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF_TITLE3,'N') = 'Y') THEN 'N'
                        ELSE NVL(D.FIFO_CHK, 'N')
                   END FIFO_CHK,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE SUBSTR(PRE_INSP_DTTM,0,12) < TO_CHAR(TO_DATE(SUBSTR(A.PRE_INSP_DTTM, 0, 12), 'YYYYMMDDHH24MI') - 1/1440, 'YYYYMMDDHH24MI') AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0) FIFO_FLAG,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE LOT_NO < A.LOT_NO AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0) LOT_FIFO_FLAG,
                   CASE WHEN #{LANG} = 'KO' THEN B.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN B.VENDOR_NM_EN
                        ELSE B.VENDOR_NM_LC
                   END VENDOR_NM,
                   A.DELI_CASE,
                   A.BOX_BAR_NO,
                   (SELECT NVL(SUM(BAR_QTY), 0) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0 AND LOC_TP IN
                                   (SELECT LOC_TP FROM U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND LOC_TP_TYPE = '10')) TOTAL_INV_QTY,
                   (SELECT COUNT(*) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0 AND LOC_TP IN
                                   (SELECT LOC_TP FROM U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND LOC_TP_TYPE = '10')) TOTAL_BOX_QTY,
                   CASE WHEN TO_NUMBER(NVL(A.LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD')) THEN 'Y'
                        ELSE 'N'
                   END LIMIT_FLAG
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA B,
                   GDCLOPDA.U_LO_LOC_MA C,
                   GDCLOPDA.U_CC_PART_NO_MA D
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.VENDOR_CD = B.VENDOR_CD(+)
               AND A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.PART_CD = D.PART_CD(+)
               AND A.USE_FLAG = 'Y'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <select id="selectBoxNoOut" parameterType="hashmap" resultType="hashmap"><!-- 부품식별표 조회(불출용) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   C.LOC_TP_TYPE,
                   A.TRANS_TYPE,
                   A.BOX_NO,
                   A.MAKE_SEQ,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN D.PART_NM_KR
                        WHEN #{LANG} = 'EN' THEN D.PART_NM_EN
                        ELSE D.PART_NM_LC
                   END PART_NM,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE COPORATE_CD = #{COPORATE_CD} AND PLANT_CD = #{PLANT_CD} AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0
                      AND LOC_TP = #{LOC_TP} AND NVL(DELI_CASE, 'XX') NOT IN (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = #{COPORATE_CD} AND COM_CD_REF4 = 'Y')) TOTAL_QTY,
                   A.BAR_QTY,
                   D.BASIC_UNIT,
                   A.VENDOR_CD,
                   A.WH_CD,
                   A.LOC_CD,
                   A.RACK_CD,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   GDCLOPDA.FN_GET_EO_CHK('BOX',A.COPORATE_CD,A.PLANT_CD,A.PART_CD,A.BOX_NO,'FD') EO_FLAG,
                   A.LOT_NO,
                   A.PRE_INSP_DTTM,
                   NVL(A.INSP_FLAG, 'N') INSP_FLAG,
                   NVL(A.DKIND, 'N') DKIND,
                   NVL(A.CONF_F, 'N') CONF_F,
                   NVL(A.SEL_FLAG, 'N') SEL_FLAG,
                   NVL(D.LACE_DIF_FLAG, 'N') LACE_DIF_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF4,'N') = 'Y') THEN 'N'
                        ELSE 'Y'
                   END ETC_OUT_CHK,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'FIFO_FORCE_YN' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = #{PLANT_CD} AND USE_YN = 'Y') THEN 'Y'
                        ELSE 'N'
                   END FIFO_FORCE,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF_TITLE3,'N') = 'Y') THEN 'N'
                        ELSE NVL(D.FIFO_CHK, 'N')
                   END FIFO_CHK,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE SUBSTR(PRE_INSP_DTTM,0,12) < TO_CHAR(TO_DATE(SUBSTR(A.PRE_INSP_DTTM, 0, 12), 'YYYYMMDDHH24MI') - 1/1440, 'YYYYMMDDHH24MI') AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0) FIFO_FLAG,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE LOT_NO < A.LOT_NO AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0) LOT_FIFO_FLAG,
                   CASE WHEN #{LANG} = 'KO' THEN B.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN B.VENDOR_NM_EN
                        ELSE B.VENDOR_NM_LC
                   END VENDOR_NM,
                   A.DELI_CASE,
                   A.BOX_BAR_NO,
                   CASE WHEN TO_NUMBER(NVL(A.LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD')) THEN 'Y'
                        ELSE 'N'
                   END LIMIT_FLAG
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA B,
                   GDCLOPDA.U_LO_LOC_MA C,
                   GDCLOPDA.U_CC_PART_NO_MA D
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.VENDOR_CD = B.VENDOR_CD(+)
               AND A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.PART_CD = D.PART_CD(+)
               AND A.USE_FLAG = 'Y'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <select id="selectBoxNoOutTemp" parameterType="hashmap" resultType="hashmap"><!-- 임시데이터 부품식별표 조회(불출용) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   C.LOC_TP_TYPE,
                   A.TRANS_TYPE,
                   A.BOX_NO,
                   A.MAKE_SEQ,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN D.PART_NM_KR
                        WHEN #{LANG} = 'EN' THEN D.PART_NM_EN
                        ELSE D.PART_NM_LC
                   END PART_NM,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE COPORATE_CD = #{COPORATE_CD} AND PLANT_CD = #{PLANT_CD} AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0
                      AND LOC_TP = #{LOC_TP} AND DELI_CASE NOT IN (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = #{COPORATE_CD} AND COM_CD_REF4 = 'Y')) TOTAL_QTY,
                   A.BAR_QTY,
                   D.BASIC_UNIT,
                   A.VENDOR_CD,
                   A.WH_CD,
                   A.LOC_CD,
                   A.RACK_CD,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   A.LOT_NO,
                   A.PRE_INSP_DTTM,
                   NVL(A.INSP_FLAG, 'N') INSP_FLAG,
                   NVL(A.DKIND, 'N') DKIND,
                   NVL(A.CONF_F, 'N') CONF_F,
                   NVL(A.SEL_FLAG, 'N') SEL_FLAG,
                   NVL(D.LACE_DIF_FLAG, 'N') LACE_DIF_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF4,'N') = 'Y') THEN 'N'
                        ELSE 'Y'
                   END ETC_OUT_CHK,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                      WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                        AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF_TITLE3,'N') = 'Y') THEN 'N'
                        ELSE NVL(D.FIFO_CHK, 'N')
                   END FIFO_CHK,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE SUBSTR(PRE_INSP_DTTM,0,12) < SUBSTR(A.PRE_INSP_DTTM,0,12) AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0) FIFO_FLAG,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_BOX_MA WHERE LOT_NO < A.LOT_NO AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0) LOT_FIFO_FLAG,
                   CASE WHEN #{LANG} = 'KO' THEN B.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN B.VENDOR_NM_EN
                        ELSE B.VENDOR_NM_LC
                   END VENDOR_NM,
                   A.DELI_CASE,
                   A.BOX_BAR_NO,
                   CASE WHEN TO_NUMBER(NVL(A.LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD')) THEN 'Y'
                        ELSE 'N'
                   END LIMIT_FLAG
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA B,
                   GDCLOPDA.U_LO_LOC_MA C,
                   GDCLOPDA.U_CC_PART_NO_MA D
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.VENDOR_CD = B.VENDOR_CD(+)
               AND A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.PART_CD = D.PART_CD(+)
               AND A.USE_FLAG = 'Y'
               AND TO_NUMBER(NVL(A.LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) >= TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD'))
               AND A.BOX_BAR_NO IN
         ]]>
                   <foreach collection="BOX_BAR_NO" item="item" index="index" open="(" separator="," close=")">
                       #{item}
                   </foreach>
             ORDER BY INSTR(
                  <foreach collection="BOX_BAR_NO" item="item" index="index" open="" separator="||" close="">
                    #{item}
                  </foreach>
                  , BOX_BAR_NO);
    </select>
    <select id="AreaCodeList" parameterType="hashmap" resultType="hashmap"><!-- 반 조회 -->
        <![CDATA[
            SELECT AREA_CD,
                   CASE WHEN #{LANG} = 'KO' THEN AREA_NM_KR
                        WHEN #{LANG} = 'EN' THEN AREA_NM_EN
                        ELSE AREA_NM_LC
                   END AREA_NM
              FROM GDCLOPDA.U_CC_AREA_CD
             WHERE PLANT_CD = #{PLANT_CD}
               AND USE_FLAG = 'Y'
        ]]>
    </select>
    <select id="LineCodeList" parameterType="hashmap" resultType="hashmap"><!-- 불출라인 조회  -->
        SELECT LINE_CD,
               CASE WHEN #{LANG} = 'KO' THEN LINE_CD ||') '|| LINE_NM_KR
                    WHEN #{LANG} = 'EN' THEN LINE_CD ||') '|| LINE_NM_EN
                    ELSE LINE_CD ||') '|| LINE_NM_LC
               END LINE_NM
          FROM GDCLOPDA.U_CC_LINE_CD
         WHERE PLANT_CD = #{PLANT_CD}
        <if test="AREA_CD != null and AREA_CD != ''">
            <![CDATA[ AND AREA_CD = #{AREA_CD} ]]>
        </if>
        <if test="LINE_TYPE == '20'">
            <![CDATA[ AND LC_PA_USE_FLAG = 'Y' ]]>
        </if>
        <if test="LINE_TYPE == '30'">
            <![CDATA[ AND LC_PM_USE_FLAG = 'Y' ]]>
        </if>
             AND USE_FLAG = 'Y'
    </select>
    <select id="AreaCodeList2" parameterType="hashmap" resultType="hashmap"><!--가공 반 조회 -->
        SELECT AREA_CD,
               AREA_NM
        FROM   GDCLOPDA.U_LO_PM_AREA_MA
        WHERE  PLANT_CD = #{PLANT_CD}
        <if test="PART_CD != null and PART_CD != ''">
               AND AREA_CD IN (SELECT DISTINCT( AREA_CD )
                               FROM   GDCLOPDA.U_LO_PM_PART_MA
                               WHERE  PLANT_CD = #{PLANT_CD}
                                      AND PART_NO = #{PART_CD})
        </if>
    </select>
    <select id="LineCodeList2" parameterType="hashmap" resultType="hashmap"><!--가공 불출라인 조회  -->
        SELECT LINE_CD,
               LINE_CD ||') '|| LINE_NM AS LINE_NM
        FROM   GDCLOPDA.U_LO_PM_LINE_MA
        WHERE  PLANT_CD = #{PLANT_CD}
        <if test="AREA_CD != null">
               AND AREA_CD = #{AREA_CD}
        </if>
        <if test="PART_CD != null and PART_CD != ''">
               AND LINE_CD IN (SELECT LINE_CD
                               FROM   U_LO_PM_PART_MA
                               WHERE  PLANT_CD = #{PLANT_CD}
                                      AND PART_NO = #{PART_CD}
                                      AND AREA_CD = #{AREA_CD})
        </if>
    </select>
    <select id="selectWHCode" parameterType="hashmap" resultType="hashmap"> <!-- 창고 조회 -->
        <![CDATA[
            SELECT WH_CD,
                   WH_NM
              FROM GDCLOPDA.U_LO_WH_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND LOC_TP = #{LOC_TP}
               AND USE_FLAG = 'Y'
        ]]>
    </select>
    <select id="selectLocCode" parameterType="hashmap" resultType="hashmap"> <!-- 구역 조회 -->
        <![CDATA[
            SELECT LOC_CD,
                   LOC_NM,
                   RACK_CD
              FROM GDCLOPDA.U_LO_WH_LOC_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND LOC_TP = #{LOC_TP}
               AND WH_CD = #{WH_CD}
               AND USE_FLAG = 'Y'
        ]]>
    </select>
    <select id="selectRackCode" parameterType="hashmap" resultType="hashmap"> <!-- RACK 조회 -->
        <![CDATA[
            SELECT B.COPORATE_CD,
                   B.PLANT_CD,
                   B.LOC_TP,
                   B.WH_CD,
                   B.LOC_CD,
                   B.RACK_CD,
                   B.RACK_BAR,
                   C.PART_CD,
                   A.WH_NM || ' ' || B.LOC_NM AS RACK_LOC_NM,
                   (
                       SELECT COUNT(*)
                         FROM GDCLOPDA.U_LO_WH_LOC_PART_MA
                        WHERE COPORATE_CD = B.COPORATE_CD
                          AND PLANT_CD = B.PLANT_CD
                          AND WH_CD = B.WH_CD
                          AND LOC_CD = B.LOC_CD
                          AND RACK_CD = B.RACK_CD
                   ) PART_CNT
              FROM GDCLOPDA.U_LO_WH_MA A,
                   GDCLOPDA.U_LO_WH_LOC_MA B,
                   GDCLOPDA.U_LO_WH_LOC_PART_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.LOC_TP = B.LOC_TP
               AND A.WH_CD = B.WH_CD
               AND B.COPORATE_CD = C.COPORATE_CD(+)
               AND B.PLANT_CD = C.PLANT_CD(+)
               AND B.LOC_TP = C.LOC_TP(+)
               AND B.WH_CD = C.WH_CD(+)
               AND B.LOC_CD = C.LOC_CD(+)
               AND B.RACK_CD = C.RACK_CD(+)
               AND B.RACK_BAR = #{RACK_BAR}
        ]]>
    </select>
    <select id="selectVwRackCode" parameterType="hashmap" resultType="hashmap"> <!-- RACK 조회 -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   LOC_TP,
                   WH_CD,
                   MAX_QTY,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_VW_PLT_MST_MA WHERE RACK_NO = A.RACK_BAR AND USE_FLAG = 'Y' AND PLT_LOC_CD = 'B02') AS MAP_QTY
              FROM GDCLOPDA.U_LO_WH_LOC_MA A
             WHERE A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.LOC_TP = #{LOC_TP}
               AND A.RACK_BAR = #{RACK_BAR}
               AND A.USE_FLAG = 'Y'
        ]]>
    </select>
    <select id="selectComboMoveCauseCode" parameterType="hashmap" resultType="hashmap"> <!-- 반출사유 조회 -->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'MOVE_CAUSE'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
        ]]>
    </select>
    <select id="selectComboProcCode" parameterType="hashmap" resultType="hashmap"> <!-- 공정 조회 -->
        <![CDATA[
            SELECT COM_CD AS PROC_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END PROC_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD ='PRO_CESS'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
             ORDER BY COM_SORT;
        ]]>
    </select>
    <select id="selectComboProcCodeField" parameterType="hashmap" resultType="hashmap"> <!-- 공정 조회(현창재고실사) -->
        <![CDATA[
            SELECT COM_CD AS PROC_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END PROC_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD ='PRO_CESS_FIELD'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
             ORDER BY COM_SORT;
        ]]>
    </select>
    <select id="selectDeliNoO" parameterType="hashmap" resultType="hashmap"> <!-- 납입문서 조회  (검수적발 O) -->
        <if test="COPORATE_CD != '4100'">
            <![CDATA[
                SELECT A.COPORATE_CD,
                       A.PLANT_CD,
                       A.DELI_NO,
                       A.DELI_TYPE,
                       A.DELI_CASE,
                       (SELECT CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                                    WHEN #{LANG} = 'EN' THEN COM_NM_EN
                                    ELSE COM_NM_LC
                               END DELI_CASE_NM
                        FROM GDCLOPDA.U_LO_COM_DET_DF
                        WHERE COM_TYPE_CD = 'DELI_CASE'
                              AND COPORATE_CD = A.COPORATE_CD
                              AND COM_CD = A.DELI_CASE
                              AND ROWNUM = 1) DELI_CASE_NM,
                       A.DELI_ST,
                       B.PART_CD,
                       CASE WHEN #{LANG} = 'KO' THEN E.PART_NM_KR
                            WHEN #{LANG} = 'EN' THEN E.PART_NM_EN
                            ELSE E.PART_NM_LC
                       END PART_NM,
                       B.LOT_NO,
                       B.DELI_QTY,
                       B.BOX_IN_QTY,
                       B.BOX_QTY,
                       A.VENDOR_CD,
                       CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                            WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                            ELSE C.VENDOR_NM_LC
                       END VENDOR_NM,
                       0 AS SCAN_QTY,
                       (SELECT NVL(TO_CHAR((SELECT NVL(SUM(BAR_QTY), 0) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = #{PLANT_CD} AND PART_CD = B.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0 AND LOC_TP IN
                                       (SELECT LOC_TP FROM U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = #{PLANT_CD} AND LOC_TP_TYPE = '10' AND NVL(LOGI_CD, 'X') != 'ETC'))
                             + NVL(B.DELI_QTY, 0)
                             - (SELECT MAX_WH_QTY FROM U_CC_PART_NO_MA WHERE PLANT_CD = #{PLANT_CD} AND PART_CD = B.PART_CD)), 0) FROM DUAL) OVER_QTY,
                       NVL(E.ETC_IN_FLAG, 'N') OTHER_PLANT_MOVE_FLAG,
                       CASE WHEN A.IN_DT IS NULL THEN 'N' ELSE 'Y' END IN_YN,
                       CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                          WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                            AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF3,'N') = 'Y') THEN 'N'
                            ELSE (SELECT NVL(INSP_FLAG, 'N') FROM GDCLOPDA.U_CC_PART_BY_VENDOR_MA
                                   WHERE PLANT_CD = A.PLANT_CD AND PART_CD = B.PART_CD AND VENDOR_CD = A.VENDOR_CD)
                       END INSP_FLAG,
                       CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                                 WHERE COM_TYPE_CD = 'OT_LOGI' AND COPORATE_CD = A.COPORATE_CD
                                                   AND COM_CD = A.VEND_CD AND USE_YN = 'Y') THEN 'Y'
                       ELSE 'N'
                       END HOUSING_FLAG,
                       A.ARRI_CD
                  FROM GDCLOPDA.U_LO_DELI_MST_MA A,
                       GDCLOPDA.U_LO_DELI_DET_MA B,
                       GDCLOPDA.U_CC_VENDOR_MA C,
                       GDCLOPDA.U_CC_PART_NO_MA E
                 WHERE A.COPORATE_CD = B.COPORATE_CD
                   AND A.DELI_NO = B.DELI_NO
                   AND A.PLANT_CD = C.PLANT_CD(+)
                   AND A.VENDOR_CD = C.VENDOR_CD(+)
                   AND B.PLANT_CD = E.PLANT_CD(+)
                   AND B.PART_CD = E.PART_CD(+)
                   AND A.DELI_NO = #{DELI_BAR_NO}
            ]]>
        </if>
        <if test="COPORATE_CD == '4100'">
            <![CDATA[
                SELECT A.COPORATE_CD,
                       A.PLANT_CD,
                       A.DELI_NO,
                       A.DELI_TYPE,
                       A.DELI_CASE,
                       (SELECT CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                                    WHEN #{LANG} = 'EN' THEN COM_NM_EN
                                    ELSE COM_NM_LC
                               END DELI_CASE_NM
                        FROM GDCLOPDA.U_LO_COM_DET_DF
                        WHERE COM_TYPE_CD = 'DELI_CASE'
                              AND COPORATE_CD = A.COPORATE_CD
                              AND COM_CD = A.DELI_CASE
                              AND ROWNUM = 1) DELI_CASE_NM,
                       A.DELI_ST,
                       B.PART_CD,
                       CASE WHEN #{LANG} = 'KO' THEN E.PART_NM_KR
                            WHEN #{LANG} = 'EN' THEN E.PART_NM_EN
                            ELSE E.PART_NM_LC
                       END PART_NM,
                       B.LOT_NO,
                       B.DELI_QTY,
                       B.BOX_IN_QTY,
                       B.BOX_QTY,
                       A.VENDOR_CD,
                       CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                            WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                            ELSE C.VENDOR_NM_LC
                       END VENDOR_NM,
                       0 AS SCAN_QTY,
                       (SELECT NVL(TO_CHAR((SELECT NVL(SUM(BAR_QTY), 0) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = #{PLANT_CD} AND PART_CD = B.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0 AND LOC_TP IN
                                       (SELECT LOC_TP FROM U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = #{PLANT_CD} AND LOC_TP_TYPE = '10' AND NVL(LOGI_CD, 'X') != 'ETC'))
                             + NVL(B.DELI_QTY, 0)
                             - (SELECT MAX_WH_QTY FROM U_CC_PART_NO_MA WHERE PLANT_CD = #{PLANT_CD} AND PART_CD = B.PART_CD)), 0) FROM DUAL) OVER_QTY,
                       NVL(E.ETC_IN_FLAG, 'N') OTHER_PLANT_MOVE_FLAG,
                       CASE WHEN A.IN_DT IS NULL THEN 'N' ELSE 'Y' END IN_YN,
                       CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_COM_DET_DF
                                          WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = A.COPORATE_CD
                                            AND COM_CD = A.DELI_CASE AND NVL(COM_CD_REF3,'N') = 'Y') THEN 'N'
                            ELSE (SELECT NVL(INSP_FLAG, 'N') FROM GDCLOPDA.U_CC_PART_BY_VENDOR_MA
                                   WHERE PLANT_CD = A.PLANT_CD AND PART_CD = B.PART_CD AND VENDOR_CD = A.VENDOR_CD)
                       END INSP_FLAG,
                       CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_VW_OT_ASN_MST_MA
                                          WHERE COPORATE_CD = A.COPORATE_CD
                                            AND PLANT_CD = A.PLANT_CD
                                            AND VENDOR_CD = A.VENDOR_CD
                                            AND PART_CD IN (SELECT PART_CD FROM GDCLOPDA.U_LO_DELI_DET_MA WHERE COPORATE_CD = A.COPORATE_CD AND DELI_NO = A.DELI_NO)
                                            ) THEN 'Y'
                            ELSE 'N'
                       END HOUSING_FLAG,
                       A.ARRI_CD
                  FROM GDCLOPDA.U_LO_DELI_MST_MA A,
                       GDCLOPDA.U_LO_DELI_DET_MA B,
                       GDCLOPDA.U_CC_VENDOR_MA C,
                       GDCLOPDA.U_CC_PART_NO_MA E
                 WHERE A.COPORATE_CD = B.COPORATE_CD
                   AND A.DELI_NO = B.DELI_NO
                   AND A.PLANT_CD = C.PLANT_CD(+)
                   AND A.VENDOR_CD = C.VENDOR_CD(+)
                   AND B.PLANT_CD = E.PLANT_CD(+)
                   AND B.PART_CD = E.PART_CD(+)
                   AND A.DELI_NO = #{DELI_BAR_NO}
            ]]>
        </if>
    </select>
    <select id="selectKDBoxNo" parameterType="hashmap" resultType="hashmap"><!-- KD부품식별표 조회(입고이후) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   C.LOC_TP_TYPE,
                   A.TRANS_TYPE,
                   A.WH_CD,
                   (SELECT WH_NM FROM GDCLOPDA.U_LO_WH_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND WH_CD = A.WH_CD AND USE_FLAG ='Y') WH_NM,
                   A.BOX_NO,
                   A.MAKE_SEQ,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN D.PART_NM_KR
                        WHEN #{LANG} = 'EN' THEN D.PART_NM_EN
                        ELSE D.PART_NM_LC
                   END PART_NM,
                   A.BAR_QTY,
                   D.BASIC_UNIT,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN B.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN B.VENDOR_NM_EN
                        ELSE B.VENDOR_NM_LC
                   END VENDOR_NM,
                   A.BOX_BAR_NO,
                   NVL(D.BOX_QTY, 0) BOX_IN_QTY,
                   CASE WHEN EXISTS (SELECT 1 FROM U_LO_KD_BOX_OUT_MA WHERE COPORATE_CD = A.COPORATE_CD AND BOX_NO = A.BOX_NO AND DELI_NO IS NULL) THEN 'Y'
                        ELSE 'N'
                   END BOX_OUT_FLAG,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   NVL(D.FIFO_CHK, 'N') FIFO_CHK,
                   (SELECT COUNT(*) FROM GDCLOPDA.U_LO_KD_BOX_MA WHERE TO_NUMBER(IN_DT) < TO_NUMBER(A.IN_DT) AND COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND WH_CD = A.WH_CD AND USE_FLAG = 'Y' AND HOLD_FLAG = 'N' AND PART_CD = A.PART_CD AND BAR_QTY > 0 AND TRANS_TYPE != 'PTOT') FIFO_FLAG,
                   A.IN_DT,
                   CASE WHEN EXISTS (SELECT 1 FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND BOX_NO = A.BOX_NO AND USE_FLAG = 'Y' AND TRANS_TYPE = 'MAGR') THEN 'Y'
                        ELSE 'N'
                   END EX_FLAG
              FROM GDCLOPDA.U_LO_KD_BOX_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA B,
                   GDCLOPDA.U_LO_LOC_MA C,
                   GDCLOPDA.U_CC_PART_NO_MA D
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.VENDOR_CD = B.VENDOR_CD(+)
               AND A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.PART_CD = D.PART_CD(+)
               AND A.USE_FLAG = 'Y'
               AND A.BAR_QTY > 0
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <select id="selectKDBoxNoTemp" parameterType="hashmap" resultType="hashmap"><!-- KD부품식별표 조회(입고이후) -->
            SELECT COPORATE_CD,
                   BOX_NO,
                   PART_CD,
                   BAR_QTY,
                   VENDOR_CD,
                   BOX_BAR_NO,
                   CASE WHEN EXISTS (SELECT 1 FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND BOX_NO = A.BOX_NO AND USE_FLAG = 'Y' AND TRANS_TYPE = 'MAGR') THEN 'Y'
                        ELSE 'N'
                   END EX_FLAG
              FROM GDCLOPDA.U_LO_KD_BOX_MA A
             WHERE USE_FLAG = 'Y'
               AND BAR_QTY > 0
               AND BOX_BAR_NO IN
                   <foreach collection="BOX_BAR_NO" item="item" index="index" open="(" separator="," close=")">
                       #{item}
                   </foreach>
             ORDER BY INSTR(
                  <foreach collection="BOX_BAR_NO" item="item" index="index" open="" separator="||" close="">
                    #{item}
                  </foreach>
                  , BOX_BAR_NO);
    </select>
    <select id="selectPlalletNoSCM" parameterType="hashmap" resultType="hashmap"><!-- 팔레트 조회  (경주SCM) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.BAR_NO,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN D.PART_NM_KR
                        WHEN #{LANG} = 'EN' THEN D.PART_NM_EN
                        ELSE D.PART_NM_LC
                   END PART_NM,
                   A.PACK_QTY,
                   (
                      SELECT COUNT(*)
                        FROM GDCSCADM.U_ST_BOX_SERIAL_MA
                       WHERE PLANT_CD = A.PLANT_CD
                         AND USE_FLAG = 'Y'
                         AND PART_CD = A.PART_CD
                         AND BOX_NO IN (
                                          SELECT BOX_NO
                                            FROM GDCLOPDA.U_LO_BAR_BOX_MAP_MA
                                           WHERE PLANT_CD = A.PLANT_CD
                                             AND BAR_NO = A.BAR_NO
                                             AND PART_CD = A.PART_CD
                                             AND USE_FLAG = 'Y'
                                       )
                   ) CNT,
                   CASE WHEN EXISTS (SELECT 1 FROM U_LO_BAR_BOX_MAP_MA WHERE PLANT_CD = A.PLANT_CD AND BAR_NO = A.BAR_NO AND PART_CD = A.PART_CD AND USE_FLAG = 'N') THEN 'Y'
                        ELSE 'N'
                   END REPACK_FLAG,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG
              FROM GDCLOPDA.U_LO_PROD_BAR_MA A,
                   GDCLOPDA.U_CC_PART_NO_MA D
             WHERE A.OUT_DT IS NULL
               AND A.SCAN_DTTM IS NULL
               AND A.USE_FLAG = 'Y'
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.PART_CD = D.PART_CD(+)
               AND A.P_BAR_GB = 'PL'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <select id="selectOtTmNo" parameterType="hashmap" resultType="hashmap"><!-- 사외창고 Tm No -->
        <![CDATA[
            SELECT COPORATE_CD,
                   VENDOR_CD,
                   TM_NO,
                   SERIAL_NO,
                   SAVE_LOC,
                   OT_LOC_TP,
                   PART_CD,
                   DECODE(NVL(OUT_FLAG,'N'), 'Y', NULL, BAR_NO) AS BAR_NO,
                   NVL(HOLD_FLAG,'N') AS HOLD_FLAG,
                   NVL(OUT_FLAG,'N') AS OUT_FLAG
              FROM GDCLOPDA.U_LO_OT_TM_MA
             WHERE VENDOR_CD = #{VENDOR_CD}
               AND TM_NO = SUBSTR(#{TM_NO},0,12);
        ]]>
    </select>
    <select id="selectTmNo" parameterType="hashmap" resultType="hashmap"><!-- Tm No -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.TM_NO,
                   A.SERIAL_NO,
                   A.LINE_CD,
                   A.PART_CD,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   B.BAR_NO,
                   NVL(A.OUT_FLAG,'N') AS OUT_FLAG
              FROM GDCLOPDA.U_LO_TM_MA A,
                   GDCLOPDA.U_LO_PROD_BAR_TM_MAP_MA B
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.TM_NO = B.TM_NO(+)
               AND B.USE_FLAG(+) = 'Y'
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.TM_NO = #{TM_NO}
               AND A.USE_FLAG = 'Y';
        ]]>
    </select>
    <select id="selectInvDump" parameterType="hashmap" resultType="hashmap"><!-- 정기실사 가능여부 -->
        <![CDATA[
            SELECT CASE
                     WHEN EXISTS(SELECT 1
                                 FROM   U_LO_REAL_INV_MA A
                                 WHERE  INV_DT = NVL((SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                                                                  ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                                                             END PLANT_TIME
                                                        FROM U_LO_COM_DET_DF
                                                       WHERE COM_TYPE_CD = 'PLANT_TIME'
                                                         AND COPORATE_CD = A.COPORATE_CD
                                                         AND COM_CD = A.PLANT_CD
                                                         AND USE_YN = 'Y'),TO_CHAR(SYSDATE,'YYYYMMDD')) 
                                        AND INV_TYPE = 'R'
                                        AND COPORATE_CD = #{COPORATE_CD}
                                        AND PLANT_CD = #{PLANT_CD}
                                        AND LOC_TP = #{LOC_TP}
                                        AND CONF_FLAG = 'N'
                                        ) THEN 'Y'
                     ELSE 'N'
                   END INV_FLAG
              FROM DUAL;
        ]]>
    </select>
    
    <select id="selectInvDumpExists" parameterType="hashmap" resultType="hashmap"><!-- 단위재고실사시 전체재고실사 진행중인지 확인 -->
        <![CDATA[
            SELECT CASE
                     WHEN EXISTS(SELECT 1
                                 FROM   U_LO_REAL_INV_MA A
                                 WHERE  INV_DT = NVL((SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                                                                  ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                                                             END PLANT_TIME
                                                        FROM U_LO_COM_DET_DF
                                                       WHERE COM_TYPE_CD = 'PLANT_TIME'
                                                         AND COPORATE_CD = A.COPORATE_CD
                                                         AND COM_CD = A.PLANT_CD
                                                         AND USE_YN = 'Y'),TO_CHAR(SYSDATE,'YYYYMMDD')) 
                                        AND INV_TYPE = 'R'
                                        AND COPORATE_CD = #{COPORATE_CD}
                                        AND PLANT_CD    = #{PLANT_CD}
                                        AND LOC_TP      = #{LOC_TP}
                                        AND CONF_FLAG   = 'N'
                                        ) THEN 'N'
                     ELSE 'Y'
                   END INV_FLAG
              FROM DUAL;
        ]]>
    </select>

    <select id="selectRealInvExists" parameterType="hashmap" resultType="hashmap"><!-- 확정안한 재고실사 내역이 있는지 체크 -->
        <![CDATA[
            SELECT CASE
                     WHEN EXISTS(SELECT 1
                                 FROM   U_LO_REAL_INV_MA A
                                 WHERE  INV_DT = NVL((SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                                                                  ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                                                             END PLANT_TIME
                                                        FROM U_LO_COM_DET_DF
                                                       WHERE COM_TYPE_CD = 'PLANT_TIME'
                                                         AND COPORATE_CD = A.COPORATE_CD
                                                         AND COM_CD = A.PLANT_CD
                                                         AND USE_YN = 'Y'),TO_CHAR(SYSDATE,'YYYYMMDD')) 
                                        AND INV_TYPE = #{INV_TYPE}
                                        AND COPORATE_CD = #{COPORATE_CD}
                                        AND PLANT_CD = #{PLANT_CD}
                                        AND LOC_TP = #{LOC_TP}
                                        AND CONF_FLAG = 'N'
                                        AND BOX_BAR_NO = #{BOX_BAR_NO}
                                        AND SCAN_DTTM IS NOT NULL
                                        AND (SELECT USE_FLAG    --재고실사시 아직 확정안한 기 스캔BOX 스캔금지여부
                                               FROM U_LO_CNTR_FLOW_MA
                                              WHERE COPORATE_CD = #{COPORATE_CD}
                                                AND PLANT_CD    = #{PLANT_CD}
                                                AND CNTR_CD     = 'PDA02') = 'Y'
                                        ) THEN 'Y'
                     ELSE 'N'
                   END INV_FLAG
              FROM DUAL;
        ]]>
    </select>
    
    <select id="selectTmPlant" parameterType="hashmap" resultType="hashmap"><!-- 사내 제품 플랜트 -->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'PROD_PLANT'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
               ORDER BY COM_SORT;
        ]]>
    </select>
    <select id="selectOtTmLen" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT NVL(COM_CD_REF1,0) COM_CD_REF1
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'TM_LEN_CHK'
               AND USE_YN ='Y'
               AND COPORATE_CD = #{COPORATE_CD}
               AND TO_NUMBER(COM_CD) <= TO_NUMBER(#{TM_LEN})
             ORDER BY TO_NUMBER(COM_CD) DESC;
        ]]>
    </select>
    <select id="selectOtLogi" parameterType="hashmap" resultType="hashmap"> <!-- 사외창고 -->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'OT_LOGI'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
        ]]>
    </select>
    <select id="selectOtCkdLogi" parameterType="hashmap" resultType="hashmap"> <!-- 사외창고  CKD-->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'OT_CKD_LOGI'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
        ]]>
    </select>
    <select id="selectOtProcCd" parameterType="hashmap" resultType="hashmap"> <!-- 세척설비 -->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'OT_PROC_CD'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
        ]]>
    </select>
    <select id="selectVwPallet" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT NVL(A.PLT_LOC_CD,'A01') PLT_LOC_CD,
                   A.PART_CD,
                   A.PACK_QTY,
                   (SELECT COUNT(*)
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = A.PLANT_CD
                       AND PLT_NO = A.PLT_NO
                       AND USE_FLAG = 'Y'
                   ) MAP_QTY,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_NO = A.PLT_NO
                                        AND USE_FLAG = 'Y'
                                        AND TO_NUMBER(NVL(LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD'))) THEN 'Y'
                        ELSE 'N'
                   END LIMIT_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_NO = A.PLT_NO
                                        AND USE_FLAG = 'Y'
                                        AND NVL(HOLD_FLAG,'N') = 'Y') THEN 'Y'
                        ELSE 'N'
                   END HOLD_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_NO = A.PLT_NO
                                        AND USE_FLAG = 'Y'
                                        AND P_TRANS_TYPE = 'DERD') THEN 'Y'
                        ELSE 'N'
                   END READY_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_HI_OT_PK_IN
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_SEQ = (SELECT PLT_SEQ
                                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                                      WHERE PLANT_CD = A.PLANT_CD
                                                        AND PLT_NO = A.PLT_NO
                                                        AND USE_FLAG = 'Y'
                                                        AND ROWNUM = 1)) THEN 'Y'
                        ELSE 'N'
                   END INSERT_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_HI_OT_PK_EN
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_SEQ = (SELECT PLT_SEQ
                                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                                      WHERE PLANT_CD = A.PLANT_CD
                                                        AND PLT_NO = A.PLT_NO
                                                        AND USE_FLAG = 'Y'
                                                        AND ROWNUM = 1)) THEN 'Y'
                        ELSE 'N'
                   END PACK_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_RET_PROD_DET_LC_SY
                                      WHERE COPORATE_CD = A.COPORATE_CD
                                        AND TM_NO IN(SELECT TM_NO
                                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                                      WHERE PLANT_CD = A.PLANT_CD
                                                        AND PLT_NO = A.PLT_NO
                                                        AND USE_FLAG = 'Y')) THEN 'Y'
                        ELSE 'N'
                   END RETURN_FLAG
              FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A
             WHERE A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.PLT_NO = #{PLT_NO}
               AND A.USE_FLAG = 'Y';
        ]]>
    </select>
    <select id="selectVwPalletTemp" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLT_NO,
                   A.PLT_LOC_CD,
                   A.PART_CD,
                   A.PACK_QTY,
                   (SELECT COUNT(*)
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = A.PLANT_CD
                       AND PLT_NO = A.PLT_NO
                       AND USE_FLAG = 'Y'
                   ) MAP_QTY,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_NO = A.PLT_NO
                                        AND USE_FLAG = 'Y'
                                        AND TO_NUMBER(NVL(LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD'))) THEN 'Y'
                        ELSE 'N'
                   END LIMIT_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_NO = A.PLT_NO
                                        AND USE_FLAG = 'Y'
                                        AND NVL(HOLD_FLAG,'N') = 'Y') THEN 'Y'
                        ELSE 'N'
                   END HOLD_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_NO = A.PLT_NO
                                        AND USE_FLAG = 'Y'
                                        AND P_TRANS_TYPE = 'DERD') THEN 'Y'
                        ELSE 'N'
                   END READY_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_TM_HI_OT_PK_EN
                                      WHERE PLANT_CD = A.PLANT_CD
                                        AND PLT_SEQ = (SELECT PLT_SEQ
                                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                                      WHERE PLANT_CD = A.PLANT_CD
                                                        AND PLT_NO = A.PLT_NO
                                                        AND USE_FLAG = 'Y'
                                                        AND ROWNUM = 1)) THEN 'Y'
                        ELSE 'N'
                   END PACK_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_RET_PROD_DET_LC_SY
                                      WHERE COPORATE_CD = A.COPORATE_CD
                                        AND TM_NO IN(SELECT TM_NO
                                                       FROM GDCLOPDA.U_LO_VW_TM_MA
                                                      WHERE PLANT_CD = A.PLANT_CD
                                                        AND PLT_NO = A.PLT_NO
                                                        AND USE_FLAG = 'Y')) THEN 'Y'
                        ELSE 'N'
                   END RETURN_FLAG
              FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A
             WHERE A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.USE_FLAG = 'Y'
               AND A.PLT_NO IN
        ]]>
                   <foreach collection="PLT_NO" item="item" index="index" open="(" separator="," close=")">
                       #{item}
                   </foreach>
             ORDER BY INSTR(
                  <foreach collection="PLT_NO" item="item" index="index" open="" separator="||" close="">
                    #{item}
                  </foreach>
                  , PLT_NO);
    </select>
    <select id="selectVwTm" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PART_CD,
                   LOC_TP,
                   VENDOR_CD,
                   CASE WHEN TO_NUMBER(NVL(LIMIT_DT,TO_CHAR(SYSDATE,'YYYYMMDD'))) < TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD')) THEN 'Y'
                        ELSE 'N'
                   END LIMIT_FLAG,
                   NVL(HOLD_FLAG,'N') HOLD_FLAG,
                   P_TRANS_TYPE,
                   NVL(USE_FLAG,'N') USE_FLAG,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_RET_PROD_DET_LC_SY WHERE COPORATE_CD = A.COPORATE_CD AND TM_NO = A.TM_NO) THEN 'Y'
                        ELSE 'N'
                   END RETURN_FLAG,
                   NVL(TM_STATUS,'Y') TM_STATUS
              FROM GDCLOPDA.U_LO_VW_TM_MA A
             WHERE PLANT_CD = #{PLANT_CD}
               AND TM_NO = #{TM_NO};
        ]]>
    </select>
    <select id="IN_010_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT T1.PLANT_CD,
                   T1.ORDR_NO,
                   COUNT(T3.PART_CD) AS PART_CNT,
                   DECODE(T1.STATUS,'S','O','E','적','-') AS MOVE,
                   T1.STATUS,
                   T1.VEND_CD,
                   T1.VEND_NM
              FROM U_LO_DELY_PACK_DET_MA T1,
                   U_LO_DELI_MST_MA T2,
                   U_LO_DELI_DET_MA T3
             WHERE T1.ORDR_NO = T3.DELI_NO
               AND T2.DELI_NO = T3.DELI_NO                 
               AND T1.PACK_ORDR_NO = #{PACK_ORDR_NO}
               AND T1.PLANT_CD = #{PLANT_CD}
               AND T1.STATUS <> 'D'
             GROUP BY T1.PLANT_CD, T1.ORDR_NO, T2.DELI_BAR_NO, T1.STATUS, T1.VEND_CD, T1.VEND_NM, T1.ORD_KIND
             ORDER BY T1.ORDR_NO;
        ]]>
    </select>
    <select id="IN_010_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT T1.PLANT_CD,
                   T1.ORDR_NO,
                   T1.PART_CNT,
                   T1.MOVE,
                   T1.STATUS,
                   T2.PART_CD,
                   T2.CNT,
                   T1.VEND_CD,
                   T1.VEND_NM
              FROM (
                      SELECT T1.PLANT_CD,
                             T1.ORDR_NO,
                             COUNT(T3.PART_CD) AS PART_CNT,
                             DECODE(T1.STATUS,'S','O','E','적','-') AS MOVE,
                             T1.STATUS,
                             T1.VEND_CD,
                             T1.VEND_NM,
                             T1.ORD_KIND
                        FROM GDCLOPDA.U_LO_DELY_PACK_DET_MA T1 ,
                             GDCLOPDA.U_LO_DELI_MST_MA T2,
                             GDCLOPDA.U_LO_DELI_DET_MA T3
                       WHERE T1.ORDR_NO = T3.DELI_NO
                         AND T2.DELI_NO = T3.DELI_NO                 
                         AND T1.PACK_ORDR_NO = #{PACK_ORDR_NO}
                         AND T1.PLANT_CD = #{PLANT_CD}
                         AND T1.STATUS <> 'D'
                       GROUP BY T1.PLANT_CD, T1.ORDR_NO, T1.STATUS, T1.VEND_CD, T1.VEND_NM, T1.ORD_KIND
                   ) T1
              LEFT JOIN (
                           SELECT DELI_NO,PART_CD,COUNT(PART_CD) AS CNT 
                             FROM GDCLOPDA.U_LO_DELI_DET_MA 
                            WHERE DELI_NO IN ( SELECT ORDR_NO 
                                                 FROM GDCLOPDA.U_LO_DELY_PACK_DET_MA 
                                                WHERE PACK_ORDR_NO = #{PACK_ORDR_NO}
                                                  AND PLANT_CD = #{PLANT_CD} ) 
                              AND PART_CD = #{PART_CD}
                            GROUP BY DELI_NO, PART_CD            
                        ) T2 ON T2.DELI_NO = T1.ORDR_NO
             WHERE T2.PART_CD IS NOT NULL
             ORDER BY T1.ORDR_NO;
        ]]>
    </select>
    <insert id="PR_PDA_IN_020_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_020_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{DELI_NO}, #{VENDOR_CD}, #{VENDOR_NM}, #{PART_CD}, #{PART_NM},
                    #{DELI_QTY}, #{SCAN_QTY}, #{SCAN_CNT}, #{INSP_FLAG}, #{OTHER_PLANT_MOVE_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_020_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_020_C2
                (
                    #{BAR_FLAG}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{DELI_NO}, #{DELI_CASE}, #{BOX_BAR_NO}, #{LOT_NO},
                    #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{INV_QTY}, #{INSP_FLAG}, #{OTHER_PLANT_MOVE_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_020_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_020_C3
                (
                    #{COPORATE_CD}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{TO_LOC_TP_NM}, #{DELI_NO}, #{DELI_BAR_NO, jdbcType=VARCHAR}, #{WORK_SEQ}, #{VENDOR_CD}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_020_C4" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_020_C4
                (
                    #{COPORATE_CD}, #{TO_PLANT_CD}, #{DELI_NO}, #{PART_CD}, #{DELI_QTY}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="IN_030_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PART_CD,
                   SUM(A.BAR_QTY) BAR_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE A.USE_FLAG ='N'
               AND A.TRANS_TYPE = 'PTOT'
               AND EXISTS
                   (
                        SELECT 1
                          FROM GDCLOPDA.U_LO_BOX_HI
                         WHERE COPORATE_CD = A.COPORATE_CD
                           AND BOX_NO = A.BOX_NO
                           AND TRANS_KEY = A.TRANS_KEY
                           AND TRANS_TYPE = A.TRANS_TYPE
                           AND TO_PLANT_CD = #{PLANT_CD}
                           AND TO_LOC_TP = #{LOC_TP}
                   )
             GROUP BY A.PART_CD
        ]]>
    </select>
    <select id="IN_030_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.BOX_NO,
                   A.PART_CD,
                   A.VENDOR_CD,
                   A.BAR_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE A.USE_FLAG ='N'
               AND A.TRANS_TYPE = 'PTOT'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
               AND EXISTS
                   (
                        SELECT 1
                          FROM GDCLOPDA.U_LO_BOX_HI
                         WHERE COPORATE_CD = A.COPORATE_CD
                           AND BOX_NO = A.BOX_NO
                           AND TRANS_KEY = A.TRANS_KEY
                           AND TRANS_TYPE = A.TRANS_TYPE
                           AND TO_PLANT_CD = #{PLANT_CD}
                           AND TO_LOC_TP = #{LOC_TP}
                   )
        ]]>
    </select>
    <insert id="PR_PDA_IN_030_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_030_C1
                (
                    #{COPORATE_CD}, #{FR_PLANT_CD}, #{FR_LOC_TP}, #{PLANT_CD}, #{LOC_TP}, #{SCAN_QTY}, #{BOX_NO}, #{PART_CD}, #{VENDOR_CD}, #{WORK_ID},
                    #{WORK_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_040_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_040_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{DELI_NO}, #{PART_CD}, #{DELI_QTY}, #{SCAN_QTY}, #{SCAN_CNT}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_040_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_040_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{DELI_NO}, #{DELI_CASE}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{INV_QTY}, #{USER_NM},
                    #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="IN_050_S1" parameterType="hashmap" resultType="hashmap">
        SELECT
            A.VER_SEQ
            , TO_CHAR(TO_DATE(WORK_DT, 'yyyyMMdd'),'YYYYMMDD') AS ISSUE_DT
            , A.WORK_TM AS ISSUE_TM
            , A.WORK_GB AS WORK_TP
            , A.PART_CD AS PART_NO
            , A.PART_NM
            , (SELECT LINE_NM_KR FROM GDCCCADM.U_CC_LINE_CD WHERE 1=1 AND PLANT_CD IN (SELECT PLANT_CD FROM GDCCCADM.U_CC_PLANT_CD WHERE COPORATE_CD IN (SELECT COPORATE_CD FROM GDCCCADM.U_CC_COPORATE_CD WHERE ERP_COPORATE_CD = '1000')) AND LINE_CD = A.LINE_CD  AND USE_FLAG = 'Y') AS LINE_DT_NM
            , (SELECT PLANT_NM_KR FROM GDCCCADM.U_CC_PLANT_CD WHERE PLANT_CD = A.PLANT_CD AND ROWNUM = 1) AS PLANT_NM
        FROM GDCLOPDA.U_LO_INSP_CONT_MA A
        WHERE COPORATE_CD = #{COPORATE_CD}
            AND WORK_DT BETWEEN #{FROM_DATE} AND #{TO_DATE}
            <if test="PLANT_CD != 'ALL'">
                AND PLANT_CD = #{PLANT_CD}
            </if>
            <if test="LINE_CD != 'ALL'">
                AND LOC_TP = #{LINE_CD}
            </if>
            <if test="LINE_DT_CD != 'ALL'">
                AND LINE_CD = #{LINE_DT_CD}
            </if>
            <if test="PART_SEARCH_TYPE == 1 and PART_NO != ''">
                AND PART_CD LIKE '%' || #{PART_NO} || '%'
            </if>
            <if test="PART_SEARCH_TYPE == 2 and PART_NO != ''">
                AND PART_CD = #{PART_NO}
            </if>
    </select>
    <select id="IN_051_S1" parameterType="hashmap" resultType="hashmap">
        SELECT
            PLANT_CD, LOC_TP AS LINE_CD, LINE_CD AS LINE_DT_CD, WORK_DT AS ISSUE_DT, WORK_TM AS ISSUE_TM, WORK_GB AS WORK_TP, WORK_LINE
            , PART_CD AS PART_NO, PART_NM, VENDOR_CD AS VEND_CD, VEND_NM
            , INSP_CD AS REASON, INSP_DESC AS REASON_ETC, INSP_CONT AS REASON_CONT
            , FILE1, FILE2, FILE3, WORK_NM AS HPT_EMP, VEND_WORK_NM AS VEND_EMP, REP_PLN_DT AS REPAIR_BE_DT, REP_COP_DT AS REPAIR_COMPLETE_DT
            , CREATE_USER AS REG_EMP, MODIFY_USER AS UPDT_EMP, '' AS PART_TP
        FROM
            GDCLOPDA.U_LO_INSP_CONT_MA
        WHERE COPORATE_CD = '1000'
            AND VER_SEQ = #{VER_SEQ}
    </select>
    <select id="IN_051_S2" parameterType="hashmap" resultType="hashmap">
        SELECT COM_CD AS CD, COM_NM_KR AS NM
          FROM GDCLOPDA.U_LO_COM_DET_DF
         WHERE COM_TYPE_CD = 'WORK_GB'
           AND COPORATE_CD = '1000'
           AND USE_YN = 'Y'
         ORDER BY COM_SORT
    </select>
    <select id="IN_051_S3" parameterType="hashmap" resultType="hashmap">
        SELECT COM_CD AS CD, COM_NM_KR AS NM
          FROM GDCLOPDA.U_LO_COM_DET_DF
         WHERE COM_TYPE_CD = 'CMGB'
           AND COPORATE_CD = '1000'
           AND USE_YN = 'Y'
         ORDER BY COM_SORT
    </select>
    <select id="IN_051_S4" parameterType="hashmap" resultType="hashmap">
        SELECT
            DISTINCT
            PART_CD AS PART_NO,  PART_CD || '(' || PART_NM_KR || ')' AS PART_NM, PART_NM_KR AS ONLY_PART_NM
        FROM
            GDCLOPDA.U_CC_PART_NO_MA A
        WHERE
            PART_CD LIKE '%' || #{PART_NO} || '%'
            <if test="PLANT_CD != null and PLANT_CD != '' and PLANT_CD != 'ALL'">
                AND PLANT_CD = #{PLANT_CD}
            </if>
            <if test="VEND_CD != null and VEND_CD != ''">
                AND PART_CD IN (SELECT PART_CD FROM GDCLOPDA.U_CC_PART_BY_VENDOR_MA WHERE VENDOR_CD = #{VEND_CD}) 
            </if>
    </select>
    <select id="IN_051_S5" parameterType="hashmap" resultType="hashmap">
        SELECT DISTINCT
            VENDOR_CD VEND_CD, VENDOR_NM_KR AS VEND_NM
        FROM
            GDCLOPDA.U_CC_VENDOR_MA
        WHERE PLANT_CD IN (SELECT PLANT_CD FROM GDCLOPDA.U_CC_PLANT_CD WHERE COPORATE_CD IN (SELECT COPORATE_CD FROM GDCCCADM.U_CC_COPORATE_CD WHERE ERP_COPORATE_CD = '1000'))
         AND  VENDOR_CD IN (SELECT VENDOR_CD FROM GDCLOPDA.U_CC_PART_BY_VENDOR_MA WHERE PART_CD = #{PART_NO})
        ORDER BY
            VEND_NM ASC
    </select>
    <insert id="PR_PDA_IN_051_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_051_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LINE_CD}, #{ISSUE_DT}, #{ISSUE_TM}, #{WORK_TP}, #{PART_NO}, #{PART_NM}, #{VEND_CD},
                    #{VEND_NM}, #{REASON}, #{REASON_ETC}, #{REASON_CONT}, #{FILE1}, #{FILE2}, #{FILE3}, #{HPT_EMP}, #{VEND_EMP},
                    #{REPAIR_BE_DT}, #{REPAIR_COMPLETE_DT}, #{DRIV_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="IN_060_S1" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(입고이전) -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   PART_CD,
                   BAR_QTY,
                   VENDOR_CD,
                   LOT_NO,
                   BOX_BAR_NO,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_BOX_MA WHERE BOX_NO = A.BOX_NO) THEN 'Y'
                        ELSE 'N'
                   END BOX_YN
              FROM GDCLOPDA.U_LO_BOX_VITUAL_MA A
             WHERE BOX_NO = #{BOX_NO}
        ]]>
    </select>
    <insert id="PR_PDA_IN_060_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_060_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{DELI_NO}, #{VENDOR_CD}, #{VENDOR_NM}, #{PART_CD}, #{PART_NM},
                    #{DELI_QTY}, #{SCAN_QTY}, #{SCAN_CNT}, #{INSP_FLAG}, #{OTHER_PLANT_MOVE_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_060_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_060_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{DELI_NO}, #{DELI_CASE}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD},
                    #{INV_QTY}, #{INSP_FLAG}, #{OTHER_PLANT_MOVE_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="IN_070_S1" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(입고이전) -->
        <![CDATA[
            SELECT NVL((SELECT SUM(REQ_QTY)
                          FROM GDCLOPDA.U_LO_PLN_DAY_MAT_MA
                         WHERE PLANT_CD = A.PLANT_CD
                           AND PART_CD = A.PART_CD
                           AND PLN_DT BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE + NVL(A.CONTROL_DT,1)-1, 'YYYYMMDD')),0) +
                   NVL(A.SAFE_QTY, 0) -
                   NVL((SELECT SUM(BAR_QTY)
                      FROM GDCLOPDA.U_LO_BOX_HI
                     WHERE COPORATE_CD = A.COPORATE_CD
                       AND PART_CD = A.PART_CD
                       AND LOC_TP IN (SELECT LOC_TP FROM GDCLOPDA.U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP_TYPE = '20')
                       AND TRANS_TYPE = 'CRLB'),0)
                   AS CNTR_QTY,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND BOX_BAR_NO = #{BOX_BAR_NO}) THEN 'Y'
                        ELSE 'N'
                   END BOX_YN,
                   A.PART_CD
              FROM GDCLOPDA.U_LO_SUBCONTRACT_PART_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND REPLACE(PART_CD,'-','') = #{PART_CD}
               AND VENDOR_CD = (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COPORATE_CD = A.COPORATE_CD AND COM_TYPE_CD = 'SUBCONTRACT_VENDOR' AND COM_CD_REF1 = A.PLANT_CD AND USE_YN = 'Y' AND ROWNUM = 1)
               AND USE_FLAG = 'Y'
               AND ROWNUM = 1;
        ]]>
    </select>
    <insert id="PR_PDA_IN_070_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_070_C1
                (
                    #{COPORATE_CD}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{BOX_BAR_NO}, #{LOT_NO}, #{VENDOR_CD}, #{PART_CD}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_080_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_080_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{DELI_NO}, #{PART_CD}, #{SCAN_QTY}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_IN_080_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_080_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{DELI_NO}, #{DELI_CASE}, #{BOX_BAR_NO}, #{LOT_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD},
                    #{INV_QTY}, #{INSP_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="IN_090_S1" parameterType="hashmap" resultType="hashmap"> <!-- 수입검사  -->
        <![CDATA[
            SELECT A.COPORATE_CD, 
                   A.PLANT_CD, 
                   A.BOX_NO, 
                   A.ORG_BAR_QTY AS BAR_QTY, 
                   NVL(B.BAR_QTY,A.ORG_BAR_QTY) AS OK_QTY, 
                   A.BAR_QTY-NVL(B.BAR_QTY,A.ORG_BAR_QTY) AS NG_QTY, 
                   C.DELI_NO,
                   A.PART_CD,
                   CASE WHEN F.INSP_IN_DT IS NOT NULL THEN 'Y'
                        ELSE 'N'
                    END INSP_IN_FLAG,    
                   D.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN G.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN G.VENDOR_NM_EN
                        ELSE G.VENDOR_NM_LC
                    END VENDOR_NM
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   (SELECT * FROM GDCLOPDA.U_LO_BOX_HI WHERE TRANS_TYPE = 'MAGR') B,
                   GDCLOPDA.U_LO_DELI_BOX_MAP_MA C,
                   GDCLOPDA.U_LO_DELI_MST_MA D,
                   GDCLOPDA.U_LO_DELI_DET_MA E,
                   GDCLOPDA.U_LO_DELI_DET_IN_MA F,
                   GDCLOPDA.U_CC_VENDOR_MA G
             WHERE A.COPORATE_CD = B.COPORATE_CD(+)
               AND A.BOX_NO = B.BOX_NO(+)
               AND A.COPORATE_CD = C.COPORATE_CD
               AND A.BOX_NO = C.BOX_NO
               AND A.TRANS_TYPE = 'MAAR'
               AND A.PART_CD = E.PART_CD
               AND C.DELI_NO = D.DELI_NO
               AND D.COPORATE_CD = E.COPORATE_CD
               AND D.DELI_NO = E.DELI_NO
               AND D.COPORATE_CD IN (SELECT COPORATE_CD FROM GDCLOPDA.U_LO_CNTR_FLOW_MA WHERE CNTR_CD = 'IN05' AND USE_FLAG = 'Y')
               AND D.PLANT_CD = G.PLANT_CD(+)
               AND D.VENDOR_CD = G.VENDOR_CD(+)
               AND E.COPORATE_CD = F.COPORATE_CD
               AND E.DELI_NO = F.DELI_NO
               AND E.PART_CD = F.PART_CD
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND C.DELI_NO = #{DELI_NO}
        ]]>
    </select>
    <insert id="PR_PDA_IN_090_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_IN_090_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{DELI_NO}, #{BOX_NO}, #{PART_CD}, #{OK_QTY}, #{NG_QTY}, 
                    #{OK_QTY_SUM}, #{NG_QTY_SUM}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_010_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_010_C1
                (
                    #{CHECK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY}, #{DIV_QTY},
                    #{PRE_INSP_DTTM}, #{FIFO}, #{INSP_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_015_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_015_C1
                (
                    #{CHECK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BAN_CD}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD},
                    #{EXP_QTY}, #{DIV_QTY}, #{PRE_INSP_DTTM}, #{FIFO}, #{INSP_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_LOT, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_015_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_015_C2
                (
                    #{PLANT_CD}, #{LINE_CD}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_020_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_020_C1
                (
                    #{CHECK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BAN_CD}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD},
                    #{EXP_QTY}, #{DIV_QTY}, #{PRE_INSP_DTTM}, #{FIFO}, #{INSP_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_025_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_025_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{SCAN_QTY},
                    #{FIFO}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_030_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_030_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BAN_CD}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{SCAN_QTY},
                    #{FIFO}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_035_S1" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(선별품) -->
        <![CDATA[
            SELECT B.DELI_NO,
                   (SELECT SUM(BAR_QTY)
                      FROM GDCLOPDA.U_LO_BOX_MA C
                     WHERE EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_DELI_BOX_MAP_MA WHERE COPORATE_CD = C.COPORATE_CD
                                      AND DELI_NO = B.DELI_NO)
                       AND COPORATE_CD = A.COPORATE_CD AND PART_CD = A.PART_CD AND TRANS_TYPE = 'MAGR') OK_QTY,
                   A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   C.LOC_TP_TYPE,
                   A.TRANS_TYPE,
                   A.BOX_NO,
                   A.PART_CD,
                   A.BAR_QTY,
                   A.VENDOR_CD,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   NVL(A.DKIND, 'N') DKIND,
                   NVL(A.SEL_FLAG,'N') SEL_FLAG
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   GDCLOPDA.U_LO_DELI_BOX_MAP_MA B,
                   GDCLOPDA.U_LO_LOC_MA C
             WHERE A.USE_FLAG = 'Y'
               AND A.COPORATE_CD = B.COPORATE_CD
               AND A.BOX_NO = B.BOX_NO
               AND A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <insert id="PR_PDA_OT_035_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_035_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BAN_CD}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY},
                    #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_035_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_035_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{DELI_NO}, #{PART_CD}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_040_S1" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(입고이전) -->
        <![CDATA[
            SELECT PART_CD, SUM(BAR_QTY) SUM_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND LOC_TP = #{LOC_TP}
               AND TRANS_TYPE = 'MTMV'
               AND DKIND = 'Y'
               AND NVL(CONF_F,'N') = 'N'
               AND USE_FLAG = 'Y'
               AND BAR_QTY > 0
               AND WORK_DT = NVL((SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                              ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                         END PLANT_TIME
                    FROM U_LO_COM_DET_DF
                   WHERE COM_TYPE_CD = 'PLANT_TIME'
                     AND COPORATE_CD = A.COPORATE_CD
                     AND COM_CD = A.PLANT_CD
                     AND USE_YN = 'Y'),TO_CHAR(SYSDATE,'YYYYMMDD'))
               AND MODIFY_USER = #{USER_ID}
             GROUP BY PART_CD;
        ]]>
    </select>
    <select id="OT_040_S2" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회(이종품) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   C.LOC_TP_TYPE,
                   A.TRANS_TYPE,
                   A.BOX_NO,
                   A.PART_CD,
                   A.BAR_QTY,
                   A.MODIFY_USER,
                   NVL(A.DKIND, 'N') DKIND,
                   NVL(A.CONF_F, 'N') CONF_F,
                   CASE WHEN A.WORK_DT = NVL((SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                                                        ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                                                   END PLANT_TIME
                                              FROM U_LO_COM_DET_DF
                                             WHERE COM_TYPE_CD = 'PLANT_TIME'
                                               AND COPORATE_CD = A.COPORATE_CD
                                               AND COM_CD = A.PLANT_CD
                                               AND USE_YN = 'Y'),TO_CHAR(SYSDATE,'YYYYMMDD')) THEN 'Y'
                        ELSE 'N'
                   END DATE_FLAG
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   GDCLOPDA.U_LO_LOC_MA C
             WHERE A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.USE_FLAG = 'Y'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO};
        ]]>
    </select>
    <insert id="PR_PDA_OT_040_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_040_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_041_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PART_CD,
                   A.BAR_QTY,
                   A.BOX_BAR_NO
              FROM GDCLOPDA.U_LO_BWA_CROOM_IFI A,
                   GDCLOPDA.U_CC_PART_NO_MA B
             WHERE A.PLANT_CD = B.PLANT_CD
               AND A.PART_CD = B.PART_CD
               AND B.DIF_FLAG = 'Y'
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.DKIND_DTTM IS NULL
               AND A.WORK_DT = NVL((SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                                              ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                                         END PLANT_TIME
                                     FROM U_LO_COM_DET_DF
                                    WHERE COM_TYPE_CD = 'PLANT_TIME'
                                      AND COPORATE_CD = #{COPORATE_CD}
                                      AND COM_CD = A.PLANT_CD
                                      AND USE_YN = 'Y'),TO_CHAR(SYSDATE,'YYYYMMDD'));
        ]]>
    </select>
    <insert id="PR_PDA_OT_041_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_041_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{BOX_BAR_NO}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_050_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_050_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_060_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_060_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{RETURN_QTY}, #{EXP_QTY}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_070_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_070_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{SCAN_QTY}, #{BOX_NO}, #{PART_CD}, #{VENDOR_CD}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_080_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.MOVE_CASE = 'C'
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <select id="OT_080_S2" parameterType="hashmap" resultType="hashmap"> <!-- 반출유형 조회 -->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM,
                   COM_CD_REF1 AS COM_CD_REF
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'MOVE_GB'
               AND COPORATE_CD = #{COPORATE_CD}
               AND COM_CD_REF2 = 'C'
               AND USE_YN = 'Y'
        ]]>
    </select>
    <insert id="PR_PDA_OT_080_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_080_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{MOVE_YN}, #{MOVE_NO}, #{MOVE_UNIT}, #{MOVE_TYPE}, #{MOVE_GB}, #{MOVE_QTY}, #{PART_CD}, #{VENDOR_CD},
                    #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_MOVE, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_080_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_080_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_YN}, #{MOVE_SEQ}, #{MOVE_NO}, #{MOVE_QTY}, #{BOX_NO}, #{PART_CD}, #{VENDOR_CD},
                    #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_MOVE_DT, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_080_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_080_C3
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{DIV_QTY}, #{PRE_INSP_DTTM}, #{INSP_FLAG}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_085_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_CASE,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   D.BOX_NO,
                   NVL(D.RETURN_QTY, 0) SCAN_QTY,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C,
                   GDCLOPDA.U_LO_MOVE_DET_BAR_MA D
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND B.COPORATE_CD = D.COPORATE_CD(+)
               AND B.PLANT_CD = D.PLANT_CD(+)
               AND B.MOVE_NO = D.MOVE_NO(+)
               AND B.MOVE_SEQ = D. MOVE_SEQ(+)
               AND A.MOVE_CASE = 'B'
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
             ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <select id="OT_085_S2" parameterType="hashmap" resultType="hashmap"> <!-- 반출유형 조회 -->
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM,
                   COM_CD_REF1 AS COM_CD_REF
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'MOVE_GB'
               AND COPORATE_CD = #{COPORATE_CD}
               AND COM_CD_REF2 = 'B'
               AND USE_YN = 'Y'
        ]]>
    </select>
    <insert id="PR_PDA_OT_085_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_085_C1
                (   
                    #{COPORATE_CD}, #{PLANT_CD}, #{MOVE_YN}, #{MOVE_NO}, #{MOVE_UNIT}, #{MOVE_TYPE}, #{MOVE_GB}, #{MOVE_QTY}, #{PART_CD}, #{BOX_NO},
                    #{VENDOR_CD}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_MOVE, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_085_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_085_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_YN}, #{MOVE_SEQ}, #{MOVE_NO}, #{MOVE_QTY}, #{BOX_NO}, #{PART_CD}, #{VENDOR_CD},
                    #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_MOVE_DT, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_086_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.MOVE_GB = '14'
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <insert id="PR_PDA_OT_086_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_086_C1
                (   
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{MOVE_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_087_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.PLANT_CD,
                   A.MOVE_NO,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.MOVE_GB IN ('22','23')
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <insert id="PR_PDA_OT_087_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_087_C1
                (   
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_090_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.TRANS_TYPE,
                   A.BOX_NO,
                   A.PART_CD,
                   A.BAR_QTY,
                   A.VENDOR_CD,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE 1=1
               AND (  --지곡인 경우만 품번별 저장위치 마스터 검증하도록 변경
                       DECODE(SUBSTR(#{TO_PLANT_CD}, 1, 2), '11', 'N', 'Y') = 'Y'
                    OR
                       EXISTS
                       (
                            SELECT 1
                              FROM GDCLOPDA.U_LO_LOC_PART_MA
                             WHERE PART_CD = A.PART_CD
                               AND PLANT_CD = #{TO_PLANT_CD}
                               AND LOC_TP = #{TO_LOC_TP}
                               AND USE_FLAG = 'Y'
                       )
                    )
               AND A.USE_FLAG = 'Y'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <insert id="PR_PDA_OT_090_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_090_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{SCAN_QTY}, #{BOX_NO}, #{PART_CD}, #{VENDOR_CD}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_100_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            WITH VW_MST AS (
                SELECT PLANT_CD
                      ,PART_CD AS PART_NO
                      ,MAX(PART_NM_KR) PART_NM
                  FROM GDCLOPDA.U_CC_PART_NO_MA
                 WHERE PLANT_CD = #{PLANT_CD}
                 GROUP BY PLANT_CD
                         ,PART_CD
            ), VW_VIEW_PART AS ( 
                --사용자 등록이 한건도 안된품번(누구나 조회)
                SELECT A.PLANT_CD
                      ,A.PART_NO
                  FROM VW_MST A
                      LEFT OUTER JOIN
                       WMS.TB_PART_EMP@GCSPROD_DBL B
                      ON    B.PLANT_CD = A.PLANT_CD
                        AND B.PART_NO = A.PART_NO
                 WHERE B.EMP_NO IS NULL
                UNION ALL
                -- 사용자 등록된 품번(해당사용자에게만 표시)
                SELECT A.PLANT_CD
                      ,A.PART_NO
                  FROM VW_MST A
                      LEFT OUTER JOIN
                       WMS.TB_PART_EMP@GCSPROD_DBL B
                      ON    B.PLANT_CD = A.PLANT_CD
                        AND B.PART_NO = A.PART_NO
                 WHERE B.EMP_NO = #{USER_ID}
            )
            SELECT A.PLANT_CD                          PLANT_CD
                  ,A.PART_NO                           PART_NO
                  ,(SELECT PART_NM
                      FROM VW_MST 
                     WHERE PLANT_CD = A.PLANT_CD
                       AND PART_NO  = A.PART_NO)       PART_NM 
                  ,COUNT(*) - NVL(MAX(B.ORDER_QTY), 0) BOX_CNT
              FROM WMS.TB_WMS_INV@GCSPROD_DBL A
                  LEFT OUTER JOIN
                   (
                    SELECT PART_NO, SUM(ORDER_QUANTITY) ORDER_QTY
                      FROM WMS.TB_EXPORT_ORDER@GCSPROD_DBL
                     WHERE STATE = '0'
                       AND SERIAL_NO IS NULL
                     GROUP BY PART_NO
                   ) B
                  ON B.PART_NO = A.PART_NO
                  INNER JOIN
                   VW_VIEW_PART C
                  ON    C.PLANT_CD = A.PLANT_CD
                    AND C.PART_NO  = A.PART_NO 
                  INNER JOIN
                   GDCLOPDA.U_LO_BOX_MA D
                  ON    A.PLANT_CD = D.PLANT_CD
                    AND A.VEND_CD  = D.VENDOR_CD
                    AND A.PART_NO  = D.PART_CD
                    AND A.BOX_NO   = D.BOX_NO
             WHERE A.PLANT_CD = #{PLANT_CD}
               AND A.STATUS   = 'IF'
             GROUP BY A.PLANT_CD
                     ,A.PART_NO
             ORDER BY PART_NO;
        ]]>
    </select>
    <select id="OT_101_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLANT_CD
                  ,A.PART_NO
                  ,B.PART_NM
                  ,B.BOX_QTY
                  ,COUNT(A.BOX_NO) - NVL(MAX(ORDER_QTY), 0) BOX_CNT
                  ,(COUNT(A.BOX_NO) - NVL(MAX(ORDER_QTY), 0)) * B.BOX_QTY TOT_CNT 
              FROM WMS.TB_WMS_INV@GCSPROD_DBL A
                  LEFT OUTER JOIN
                   (
                    SELECT PLANT_CD
                          ,PART_CD AS PART_NO
                          ,MAX(PART_NM_KR) PART_NM
                          ,MAX(BOX_QTY) BOX_QTY
                      FROM GDCLOPDA.U_CC_PART_NO_MA
                     GROUP BY PLANT_CD
                             ,PART_CD
                   ) B
                  ON    B.PLANT_CD = A.PLANT_CD
                    AND B.PART_NO = A.PART_NO
                  LEFT OUTER JOIN
                   (
                    SELECT PART_NO, SUM(ORDER_QUANTITY) ORDER_QTY
                      FROM WMS.TB_EXPORT_ORDER@GCSPROD_DBL
                     WHERE STATE = '0'
                       AND SERIAL_NO IS NULL
                     GROUP BY PART_NO
                   ) C
                  ON C.PART_NO = A.PART_NO
                  INNER JOIN
                   GDCLOPDA.U_LO_BOX_MA D
                  ON    A.PLANT_CD = D.PLANT_CD
                    AND A.VEND_CD  = D.VENDOR_CD
                    AND A.PART_NO  = D.PART_CD
                    AND A.BOX_NO   = D.BOX_NO
             WHERE A.PLANT_CD = #{PLANT_CD}
               AND A.PART_NO = #{PART_CD}
               AND A.STATUS = 'IF'
             GROUP BY A.PLANT_CD
                     ,A.PART_NO
                     ,B.PART_NM
                     ,B.BOX_QTY;
        ]]>
    </select>
    <select id="OT_101_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT CASE WHEN
                (
                   SELECT COUNT(*)
                     FROM WMS.TB_WMS_INV@GCSPROD_DBL
                    WHERE PLANT_CD = #{PLANT_CD}
                      AND PART_NO  = #{PART_CD}
                      AND STATUS   = 'IF'
                ) -
                (
                   SELECT NVL(SUM(ORDER_QUANTITY),0)
                     FROM WMS.TB_EXPORT_ORDER@GCSPROD_DBL
                    WHERE STATE = '0'
                      AND SERIAL_NO IS NULL
                      AND PART_NO = #{PART_CD}
                ) < TO_NUMBER(#{EXP_CNT}) THEN 'E : 출고 가능 BOX수량 초과' || CHR(13) || CHR(10) || #{PART_CD} || ' : ' || '현 재고 BOX수량(' ||
                (
                   (
                      SELECT COUNT(*)
                        FROM WMS.TB_WMS_INV@GCSPROD_DBL
                       WHERE PLANT_CD = #{PLANT_CD}
                         AND PART_NO  = #{PART_CD}
                         AND STATUS   = 'IF'
                   ) -
                   (
                      SELECT NVL(SUM(ORDER_QUANTITY),0)
                        FROM WMS.TB_EXPORT_ORDER@GCSPROD_DBL
                       WHERE STATE = '0'
                         AND SERIAL_NO IS NULL
                         AND PART_NO = #{PART_CD}
                   )
                ) || ')' ELSE 'S' END RTN_MSG
              FROM DUAL;
        ]]>
    </select>
    <insert id="OT_101_I1" parameterType="hashmap">
        <![CDATA[
            INSERT INTO WMS.TB_EXPORT_ORDER@GCSPROD_DBL
            (
               KEYID,
               ORDER_GRP_ID,
               PART_NO,
               SERIAL_NO,
               ORDER_QUANTITY,
               STATE
            )
            VALUES
            (
               (SELECT NVL(MAX(KEYID), 0) + 1 FROM WMS.TB_EXPORT_ORDER@GCSPROD_DBL),
               TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SQ_ORDER_NO.NEXTVAL@GCSPROD_DBL, 4, '0'),
               #{PART_CD},
               NULL,
               TO_NUMBER(#{EXP_CNT}),
               0
            );
        ]]>
    </insert>
    <select id="OT_110_S1" parameterType="hashmap" resultType="hashmap"> <!-- 타용도 요청 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.REQ_ETC_NO,
                   A.PART_CD,
                   NVL(A.REQ_QTY, 0) REQ_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   NVL(A.OUT_DT,'N') OUT_YN
              FROM GDCLOPDA.U_LO_ETC_REQ_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.REQ_ETC_GB IN ('1','2')
               AND NVL(A.STOP_FLAG, 'N') != 'Y'
               AND A.REQ_STEP = '5'
               AND A.REQ_ETC_NO = #{REQ_ETC_NO}
               AND A.PLANT_CD = #{PLANT_CD}
        ]]>
    </select>
    <insert id="PR_PDA_OT_110_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_110_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{OUT_QTY}, #{REQ_ETC_NO}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_110_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_110_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{DIV_QTY}, #{PRE_INSP_DTTM}, #{INSP_FLAG}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_111_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_111_C1
                (
                    #{CHECK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TO_LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY}, #{DIV_QTY},
                    #{PRE_INSP_DTTM}, #{INSP_FLAG}, #{WORK_NM}, #{WORK_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_115_S1" parameterType="hashmap" resultType="hashmap"> <!-- 타용도 요청 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.REQ_ETC_NO,
                   A.PART_CD,
                   NVL(A.REQ_QTY, 0) REQ_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   NVL(A.OUT_DT,'N') OUT_YN
              FROM GDCLOPDA.U_LO_ETC_REQ_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.REQ_ETC_GB IN ('1','2')
               AND NVL(A.STOP_FLAG, 'N') != 'Y'
               AND A.REQ_STEP = CASE WHEN A.PO_NO IS NOT NULL THEN '4'
                                     ELSE '5'
                                END
               AND A.REQ_ETC_NO = #{REQ_ETC_NO}
               AND A.PLANT_CD = #{PLANT_CD}
        ]]>
    </select>
    <insert id="PR_PDA_OT_115_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_115_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PART_CD}, #{REQ_ETC_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_118_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PART_CD,
                   SUM(A.BAR_QTY) BAR_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE A.USE_FLAG ='N'
               AND A.TRANS_TYPE = 'MTGI'
               AND EXISTS
                   (
                        SELECT 1
                          FROM GDCLOPDA.U_LO_BOX_HI
                         WHERE COPORATE_CD = A.COPORATE_CD
                           AND BOX_NO = A.BOX_NO
                           AND TRANS_KEY = A.TRANS_KEY
                           AND TRANS_TYPE = A.TRANS_TYPE
                           AND TO_PLANT_CD = #{PLANT_CD}
                           AND TO_LOC_TP = #{LOC_TP}
        ]]>
        <choose>
            <when test="LINE_CD != null and LINE_CD != ''">
                <![CDATA[
                    AND TO_LINE_CD = #{LINE_CD}
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    AND TO_LINE_CD IS NULL
                ]]>
            </otherwise>
        </choose>
        <![CDATA[
                   )
             GROUP BY A.PART_CD
        ]]>
    </select>
    <select id="OT_118_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.BOX_NO,
                   A.PART_CD,
                   A.VENDOR_CD,
                   A.BAR_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE A.USE_FLAG ='N'
               AND A.TRANS_TYPE = 'MTGI'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
               AND EXISTS
                   (
                        SELECT 1
                          FROM GDCLOPDA.U_LO_BOX_HI
                         WHERE COPORATE_CD = A.COPORATE_CD
                           AND BOX_NO = A.BOX_NO
                           AND TRANS_KEY = A.TRANS_KEY
                           AND TRANS_TYPE = A.TRANS_TYPE
                           AND TO_PLANT_CD = #{PLANT_CD}
                           AND TO_LOC_TP = #{LOC_TP}
        ]]>
        <choose>
            <when test="LINE_CD != null and LINE_CD != ''">
                <![CDATA[
                    AND TO_LINE_CD = #{LINE_CD}
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    AND TO_LINE_CD IS NULL
                ]]>
            </otherwise>
        </choose>
        <![CDATA[
                   )
        ]]>
    </select>
    <insert id="PR_PDA_OT_118_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_118_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{FR_LOC_TP}, #{LOC_TP}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{SCAN_QTY}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_120_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PART_CD,
                   SUM(A.BAR_QTY) BAR_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE A.USE_FLAG ='N'
               AND A.TRANS_TYPE = 'MTGI'
               AND EXISTS
                   (
                        SELECT 1
                          FROM GDCLOPDA.U_LO_BOX_HI
                         WHERE COPORATE_CD = A.COPORATE_CD
                           AND BOX_NO = A.BOX_NO
                           AND TRANS_KEY = A.TRANS_KEY
                           AND TRANS_TYPE = A.TRANS_TYPE
                           AND TO_PLANT_CD = #{PLANT_CD}
                           AND TO_LOC_TP = #{LOC_TP}
        ]]>
        <choose>
            <when test="LINE_CD != null and LINE_CD != ''">
                <![CDATA[
                    AND TO_LINE_CD = #{LINE_CD}
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    AND TO_LINE_CD IS NULL
                ]]>
            </otherwise>
        </choose>
        <![CDATA[
                   )
             GROUP BY A.PART_CD
        ]]>
    </select>
    <select id="OT_120_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.LOC_TP,
                   A.BOX_NO,
                   A.PART_CD,
                   A.VENDOR_CD,
                   A.BAR_QTY
              FROM GDCLOPDA.U_LO_BOX_MA A
             WHERE A.USE_FLAG ='N'
               AND A.TRANS_TYPE = 'MTGI'
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
               AND EXISTS
                   (
                        SELECT 1
                          FROM GDCLOPDA.U_LO_BOX_HI
                         WHERE COPORATE_CD = A.COPORATE_CD
                           AND BOX_NO = A.BOX_NO
                           AND TRANS_KEY = A.TRANS_KEY
                           AND TRANS_TYPE = A.TRANS_TYPE
                           AND TO_PLANT_CD = #{PLANT_CD}
                           AND TO_LOC_TP = #{LOC_TP}
        ]]>
        <choose>
            <when test="LINE_CD != null and LINE_CD != ''">
                <![CDATA[
                    AND TO_LINE_CD = #{LINE_CD}
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    AND TO_LINE_CD IS NULL
                ]]>
            </otherwise>
        </choose>
        <![CDATA[
                   )
        ]]>
    </select>
    <insert id="PR_PDA_OT_120_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_120_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{FR_LOC_TP}, #{LOC_TP}, #{LINE_CD}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{SCAN_QTY}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_140_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT CASE WHEN #{LANG} = 'KO' THEN NVL(PART_NM_KR, ' ')
                        WHEN #{LANG} = 'EN' THEN NVL(PART_NM_EN, ' ')
                        ELSE NVL(PART_NM_LC, ' ')
                   END PART_NM,
                   NVL(BOX_QTY,0) BOX_QTY
              FROM GDCLOPDA.U_CC_PART_NO_MA
             WHERE PLANT_CD = #{PLANT_CD}
               AND PART_CD = #{PART_CD};
        ]]>
    </select>
    <insert id="PR_PDA_OT_140_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_140_C1
                (
                    #{PLANT_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_ORD_NO, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_ORD_SEQ, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_OT_140_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_140_C2
                (
                    #{ORD_NO}, #{ORD_SEQ}, #{COPORATE_CD}, #{PLANT_CD}, #{FR_LOC_TP}, #{TO_LOC_TP}, #{PART_CD}, #{ORD_QTY}, #{FEEDING_LOC}, 
                    #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_145_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PLANT_CD,
                   TO_LOC_TP,
                   PART_CD,
                   REQ_QTY,
                   CONF_FLAG
              FROM GDCLOPDA.U_LO_MAT_REQ_ORD_MA
             WHERE ORD_TYPE = 'MV'
               AND ORD_NO = #{ORD_NO};
        ]]>
    </select>
    <insert id="PR_PDA_OT_145_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_145_C1
                (
                    #{ORD_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="OT_150_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   YARD_NO,
                   FULL_QTY,
                   SPEC_DESC,
                   USE_FLAG,
                   RMK,
                   CASE WHEN #{LANG} = 'KO' THEN B.COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN B.COM_NM_EN
                        ELSE B.COM_NM_LC
                   END STATUS
              FROM GDCLOPDA.U_LO_METRO_MST_MA A,
                   GDCLOPDA.U_LO_COM_DET_DF B
             WHERE A.COPORATE_CD = B.COPORATE_CD(+)
               AND B.COM_TYPE_CD(+) = 'METRO_STS'
               AND B.COM_CD(+) = A.METRO_STS
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.METRO_NO = #{METRO_NO};
        ]]>
    </select>
    <insert id="PR_PDA_OT_150_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_OT_150_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{METRO_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="ST_010_S1_TEMP1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.VENDOR_CD,
                   CASE
                     WHEN #{LANG} = 'KO' THEN B.VENDOR_NM_KR
                     WHEN #{LANG} = 'EN' THEN B.VENDOR_NM_EN
                     ELSE B.VENDOR_NM_LC
                   END VENDOR_NM,
                   CASE
                     WHEN #{LANG} = 'KO' THEN C.PART_NM_KR
                     WHEN #{LANG} = 'EN' THEN C.PART_NM_EN
                     ELSE C.PART_NM_LC
                   END PART_NM
            FROM   U_CC_PART_BY_VENDOR_MA A,
                   U_CC_VENDOR_MA B,
                   U_CC_PART_NO_MA C
            WHERE  A.USE_FLAG = 'Y'
                   AND A.PART_CD = #{PART_CD}
                   AND A.PLANT_CD = #{PLANT_CD}
                   AND A.PLANT_CD = B.PLANT_CD(+)
                   AND A.VENDOR_CD = B.VENDOR_CD(+)
                   AND A.PLANT_CD = C.PLANT_CD(+)
                   AND A.PART_CD = C.PART_CD(+);
        ]]>
    </select>
    <select id="ST_010_S1_TEMP2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT
                (
                    SELECT CASE
                               WHEN EXISTS
                                    (
                                        SELECT 1
                                        FROM U_LO_BOX_MA
                                        WHERE COPORATE_CD = #{COPORATE_CD}
                                              AND PLANT_CD = #{PLANT_CD}
                                              AND LOC_TP = #{LOC_TP}
                                              AND PART_CD = #{PART_CD}
                                              AND TRANS_TYPE = 'MAAR'
                                              AND VENDOR_CD = #{VENDOR_CD}
                                              AND DELI_CASE NOT IN (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = #{COPORATE_CD} AND COM_CD_REF4 = 'Y')
                                    ) THEN
                               (
                                   SELECT NVL(SUM(ORG_BAR_QTY), 0)
                                   FROM U_LO_BOX_MA
                                   WHERE COPORATE_CD = #{COPORATE_CD}
                                         AND PLANT_CD = #{PLANT_CD}
                                         AND LOC_TP = #{LOC_TP}
                                         AND PART_CD = #{PART_CD}
                                         AND TRANS_TYPE = 'MAAR'
                                         AND VENDOR_CD = #{VENDOR_CD}
                                         AND DELI_CASE NOT IN (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = #{COPORATE_CD} AND COM_CD_REF4 = 'Y')
                               )
                               ELSE
                                   0
                           END ORG_BAR_QTY
                    FROM DUAL
                ) ORG_BAR_QTY,
                (
                    SELECT CASE
                               WHEN EXISTS
                                    (
                                        SELECT 1
                                        FROM U_LO_BOX_MA
                                        WHERE COPORATE_CD = #{COPORATE_CD}
                                              AND PLANT_CD = #{PLANT_CD}
                                              AND LOC_TP = #{LOC_TP}
                                              AND PART_CD = #{PART_CD}
                                              AND NVL(USE_FLAG, 'N') = 'Y'
                                              AND NVL(HOLD_FLAG, 'N') = 'N'
                                              AND BAR_QTY >= 0
                                              AND VENDOR_CD = #{VENDOR_CD}
                                              AND DELI_CASE NOT IN (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = #{COPORATE_CD} AND COM_CD_REF4 = 'Y')
                                    ) THEN
                               (
                                   SELECT NVL(SUM(BAR_QTY), 0)
                                   FROM U_LO_BOX_MA
                                   WHERE COPORATE_CD = #{COPORATE_CD}
                                         AND PLANT_CD = #{PLANT_CD}
                                         AND LOC_TP = #{LOC_TP}
                                         AND PART_CD = #{PART_CD}
                                         AND NVL(USE_FLAG, 'N') = 'Y'
                                         AND NVL(HOLD_FLAG, 'N') = 'N'
                                         AND BAR_QTY >= 0
                                         AND VENDOR_CD = #{VENDOR_CD}
                                         AND DELI_CASE NOT IN (SELECT COM_CD FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'DELI_CASE' AND COPORATE_CD = #{COPORATE_CD} AND COM_CD_REF4 = 'Y')
                               )
                               ELSE
                                   0
                           END BAR_QTY
                    FROM DUAL
                ) BAR_QTY
            FROM DUAL
        ]]>
    </select>
    <select id="ST_010_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LINE_CD
              FROM GDCLOPDA.U_CC_PART_BY_LINE_MA
             WHERE PLANT_CD = #{PLANT_CD}
               AND PART_CD = #{PART_CD}
               AND USE_FLAG = 'Y'
        ]]>
    </select>
    <insert id="PR_PDA_ST_010_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_010_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LINE_CD}, #{SCAN_FLAG}, #{PART_CD}, #{PART_NM}, #{VENDOR_CD}, #{VENDOR_NM}, #{PROC_CD},
                    #{IN_QTY}, #{WH_QTY}, #{LINE_QTY}, #{USE_QTY}, #{SHORT_POINT}, #{PLAN_SEQ}, #{TM_TYPE}, #{OVER_QTY}, #{TM_SEQ}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_020_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_020_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{VENDOR_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_020_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_020_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY}, #{DIV_QTY}, #{PRE_INSP_DTTM},
                    #{INSP_FLAG}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_025_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_025_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{DIV_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_030_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_030_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{VENDOR_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_030_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_030_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{MRG_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_030_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_030_C3
                (
                    #{CHECK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY}, #{PRE_INSP_DTTM},
                    #{INSP_FLAG}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_040_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_040_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM}, #{BOX_BAR_NO},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="ST_050_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT CASE WHEN #{LANG} = 'KO' THEN VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN VENDOR_NM_EN
                        ELSE VENDOR_NM_LC
                   END VENDOR_NM
              FROM GDCLOPDA.U_CC_VENDOR_MA
             WHERE USE_FLAG = 'Y'
               AND VENDOR_CD = #{VENDOR_CD}
               AND ROWNUM = 1;
        ]]>
    </select>
    <insert id="PR_PDA_ST_050_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_050_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{VENDOR_CD}, #{PART_CD}, #{BOX_IN_QTY}, #{BOX_QTY}, #{REMAIN_QTY}, #{PROC_CD}, #{PROC_NO_FROM}, #{PROC_NO_TO}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_060_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_060_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM}, #{BOX_BAR_NO},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_065_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_065_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{CASE_NO}, #{PART_CD}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM}, #{CASE_BAR_NO},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_070_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_070_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{WH_CD}, #{LOC_CD}, #{RACK_CD}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY},
                    #{USER_ID}, #{USER_NM}, 
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="ST_080_S1" parameterType="hashmap" resultType="hashmap"><!-- 부품식별표 조회(입고이후) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   (SELECT CASE WHEN #{LANG} = 'KO' THEN NVL(PLANT_NM_KR,' ')
                                WHEN #{LANG} = 'EN' THEN NVL(PLANT_NM_EN,' ')
                                ELSE NVL(PLANT_NM_LC,' ')
                           END PLANT_NM
                      FROM GDCLOPDA.U_CC_PLANT_CD WHERE PLANT_CD = A.PLANT_CD) PLANT_NM,
                    C.LOC_NM,
                    A.TRANS_TYPE,
                   (SELECT CASE WHEN #{LANG} = 'KO' THEN NVL(COM_NM_KR, A.TRANS_TYPE)
                                WHEN #{LANG} = 'EN' THEN NVL(COM_NM_EN, A.TRANS_TYPE)
                                ELSE NVL(COM_NM_LC, A.TRANS_TYPE)
                           END TRANS_TYPE
                      FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'TRANSKEY' AND COM_CD = A.TRANS_TYPE AND COPORATE_CD = A.COPORATE_CD) TRANS_TYPE_NM,
                   SUBSTR(A.TRANS_KEY,0,4)||'-'||SUBSTR(A.TRANS_KEY,5,2)||'-'||SUBSTR(A.TRANS_KEY,7,2)||' '||SUBSTR(A.TRANS_KEY,9,2)||':'||SUBSTR(A.TRANS_KEY,11,2)||':'||SUBSTR(A.TRANS_KEY,13,2) AS TRANS_KEY,
                   A.BOX_NO,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN NVL(D.PART_NM_KR, ' ')
                        WHEN #{LANG} = 'EN' THEN NVL(D.PART_NM_EN, ' ')
                        ELSE NVL(D.PART_NM_LC, ' ')
                   END PART_NM,
                   CASE WHEN A.TRANS_TYPE = 'MAAR' THEN A.ORG_BAR_QTY
                        ELSE A.BAR_QTY
                   END BAR_QTY ,
                   (SELECT NVL(SUM(BAR_QTY), 0) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0 AND LOC_TP IN
                                   (SELECT LOC_TP FROM U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND LOC_TP_TYPE = '10')) TOTAL_QTY,
                   (SELECT COUNT(*) FROM U_LO_BOX_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND PART_CD = A.PART_CD AND NVL(USE_FLAG,'N') = 'Y' AND NVL(HOLD_FLAG,'N') = 'N' AND BAR_QTY > 0 AND LOC_TP IN
                                   (SELECT LOC_TP FROM U_LO_LOC_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD = A.PLANT_CD AND LOC_TP = A.LOC_TP AND LOC_TP_TYPE = '10')) TOTAL_BOX_QTY,
                   NVL(A.HOLD_FLAG,'N') HOLD_FLAG,
                   NVL(A.LOT_NO, ' ') LOT_NO,
                   SUBSTR(A.PRE_INSP_DTTM,0,4)||'-'||SUBSTR(A.PRE_INSP_DTTM,5,2)||'-'||SUBSTR(A.PRE_INSP_DTTM,7,2)||' '||SUBSTR(A.PRE_INSP_DTTM,9,2)||':'||SUBSTR(A.PRE_INSP_DTTM,11,2)||':'||SUBSTR(A.PRE_INSP_DTTM,13,2) AS PRE_INSP_DTTM,
                   NVL(A.INSP_FLAG, 'N') INSP_FLAG,
                   NVL(A.DKIND, 'N') DKIND,
                   NVL(A.SEL_FLAG, 'N') SEL_FLAG,
                   CASE WHEN #{LANG} = 'KO' THEN NVL(B.VENDOR_NM_KR, ' ')
                        WHEN #{LANG} = 'EN' THEN NVL(B.VENDOR_NM_EN, ' ')
                        ELSE NVL(B.VENDOR_NM_LC, ' ')
                   END VENDOR_NM,
                   A.DELI_GB,
                   A.DELI_CASE
              FROM GDCLOPDA.U_LO_BOX_MA A,
                   GDCLOPDA.U_CC_VENDOR_MA B,
                   GDCLOPDA.U_LO_LOC_MA C,
                   GDCLOPDA.U_CC_PART_NO_MA D
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.VENDOR_CD = B.VENDOR_CD(+)
               AND A.LOC_TP = C.LOC_TP(+)
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.PART_CD = D.PART_CD(+)
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <select id="ST_080_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR||'('||COM_CD_REF2||')'
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN||'('||COM_CD_REF2||')'
                        ELSE COM_NM_LC||'('||COM_CD_REF2||')'
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'DELI_CASE'
               AND COPORATE_CD = #{COPORATE_CD}
               AND USE_YN = 'Y'
               ORDER BY COM_CD;
        ]]>
    </select>
    <insert id="PR_PDA_ST_080_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_080_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{BOX_NO}, #{DELI_CASE}, #{USER_ID}, #{USER_NM}, 
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_100_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_100_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{CASE_NO}, #{BLNO}, #{CONT_NO}, #{BOX_NO}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_110_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_110_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BAR, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_110_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_110_C2
                (
                    #{CASE_NO}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_120_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_120_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{NUMBER}, #{PART_CD}, #{UNIT}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_130_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_130_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{NUMBER}, #{PART_CD}, #{UNIT}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_ST_140_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_140_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{BOX_NO}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_010_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <select id="KD_010_S2" parameterType="hashmap" resultType="hashmap"><!-- 부품식별표 조회(입고이후) -->
        <![CDATA[
            SELECT COPORATE_CD,
                   BOX_NO,
                   PART_CD,
                   BAR_QTY,
                   VENDOR_CD
              FROM (SELECT COPORATE_CD,BOX_NO,PART_CD,BAR_QTY,VENDOR_CD,BOX_BAR_NO
                     FROM GDCLOPDA.U_LO_BOX_MA
                     WHERE USE_FLAG = 'Y'
                    UNION ALL
                     SELECT COPORATE_CD,BOX_NO,PART_CD,BAR_QTY,VENDOR_CD,BOX_BAR_NO
                     FROM GDCLOPDA.U_LO_BOX_MA
                     WHERE MODIFY_USER ='MIG')
             WHERE BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <insert id="PR_PDA_KD_010_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_010_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PART_CD}, #{MOVE_SEQ}, #{MOVE_NO}, #{MOVE_QTY}, #{BOX_NO}, #{VENDOR_CD}, #{USER_ID}, 
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_020_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_020_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{BOX_NO}, #{WH_CD, jdbcType=VARCHAR}, #{TO_WH_CD}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_030_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_030_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_040_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_040_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID},
                    #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_050_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_050_C1
                (
                    #{FIFO}, #{COPORATE_CD}, #{TO_PLANT_CD}, #{TO_LOC_TP}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{BAR_QTY}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_060_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.DELI_NO,
                   A.DELI_TYPE,
                   A.DELI_CASE,
                   A.DELI_ST,
                   B.PART_CD,
                   B.DELI_QTY,
                   B.BOX_QTY,
                   C.BOX_NO,
                   C.BAR_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN D.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN D.VENDOR_NM_EN
                        ELSE D.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   CASE WHEN A.IN_DT IS NULL THEN 'N' ELSE 'Y' END IN_YN,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_DELY_PACK_DET_MA
                                      WHERE COPORATE_CD = A.COPORATE_CD
                                        AND ORDR_NO = A.DELI_NO) THEN 'Y'
                        ELSE 'N' END PACK_FLAG
              FROM GDCLOPDA.U_LO_DELI_MST_MA A,
                   GDCLOPDA.U_LO_DELI_DET_MA B,
                   GDCLOPDA.U_LO_KD_BOX_OUT_MA C,
                   GDCLOPDA.U_CC_VENDOR_MA D
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.DELI_NO = B.DELI_NO
               AND B.COPORATE_CD = C.COPORATE_CD
               AND B.DELI_NO = C.DELI_NO
               AND B.PART_CD = C.PART_CD
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.VENDOR_CD = D.VENDOR_CD(+)
               AND A.DELI_NO = #{DELI_BAR_NO};
        ]]>  
    </select> 
    <insert id="PR_PDA_KD_060_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_060_C1
                (
                    #{COPORATE_CD}, #{DELI_NO}, #{BOX_NO}, #{BAR_QTY}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_070_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT VENDOR_CD,
                   (
                      SELECT CASE WHEN #{LANG} = 'KO' THEN VENDOR_NM_KR
                                  WHEN #{LANG} = 'EN' THEN VENDOR_NM_EN
                                  ELSE VENDOR_NM_LC
                             END VENDOR_NM
                        FROM U_CC_VENDOR_MA
                       WHERE VENDOR_CD = A.VENDOR_CD
                         AND ROWNUM = 1
                   ) VENDOR_NM
              FROM GDCLOPDA.U_LO_PR_OUT_MST_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND USE_FLAG = 'Y'
               AND OUT_STEP = '30'
             GROUP BY VENDOR_CD;
        ]]>  
    </select>
    <select id="KD_070_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PR_OUT_NO
              FROM GDCLOPDA.U_LO_PR_OUT_MST_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND USE_FLAG = 'Y'
               AND VENDOR_CD = #{VENDOR_CD}
               AND OUT_STEP = '30'
        ]]>  
    </select>
    <select id="KD_070_S3" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PR_OUT_NO,
                   PART_CD,
                   REQ_QTY
              FROM GDCLOPDA.U_LO_PR_OUT_DET_MA
             WHERE PR_OUT_NO = #{PR_OUT_NO}
               AND USE_FLAG ='Y'
        ]]>  
    </select>
    <insert id="PR_PDA_KD_070_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_070_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BUDAT, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_070_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_070_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{BOX_NO}, #{VENDOR_CD}, #{PR_OUT_NO}, #{PART_CD}, #{BAR_QTY}, #{I_VBELN},
                    #{I_VBELN_VL}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_075_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_075_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{BOX_NO}, #{PART_CD}, #{BAR_QTY}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_080_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_080_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PART_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_080_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_080_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY}, #{DIV_QTY},
                    #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_090_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_090_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PART_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_090_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_090_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{MRG_QTY}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_090_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_090_C3
                (
                    #{CHECK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{EXP_QTY},
                    #{IN_DT}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_100_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_100_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PART_CD},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_100_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_100_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{N_BOX_NO}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{DIV_QTY}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_100_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_100_C3
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{WH_CD, jdbcType=VARCHAR}, #{BOX_NO}, #{VENDOR_CD}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_110_S1" parameterType="hashmap" resultType="hashmap"> <!-- ASN입고(세척장) -->
        <![CDATA[
            SELECT A.PLANT_CD,
                   A.PART_CD,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   B.CASE_NO,
                   B.CASE_QTY,
                   B.BAR_NO,
                   CASE WHEN B.ATA_DT IS NULL THEN 'N' ELSE 'Y' END ATA_FLAG
              FROM GDCLOPDA.U_LO_VW_OT_ASN_MST_MA A,
                   GDCLOPDA.U_LO_VW_OT_ASN_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B. COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.DOC_NO = B.DOC_NO
               AND A.PART_CD = B.PART_CD
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.USE_FLAG = 'Y'
               AND B.USE_FLAG = 'Y'
               AND A.DOC_NO = #{DOC_NO}
        ]]>
    </select>
    <insert id="PR_PDA_KD_110_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_110_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{DOC_NO}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_120_S1" parameterType="hashmap" resultType="hashmap"> <!-- 세척투입 -->
        <![CDATA[
            SELECT PART_CD,
                   GOOD_QTY,
                   CASE_NO,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_OT_WORK_MA
                                      WHERE COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD
                                        AND LOGI_CD = A.LOGI_CD
                                        AND CASE_NO = A.CASE_NO
                                        AND WORK_STEP = '10') THEN 'Y'
                        ELSE 'N'
                   END WORK_FLAG,
                   CASE WHEN EXISTS (SELECT 1
                                       FROM GDCLOPDA.U_LO_VW_OT_WORK_MA
                                      WHERE COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD
                                        AND LOGI_CD = A.LOGI_CD
                                        AND PART_CD != A.PART_CD
                                        AND PROC_CD = #{PROC_CD}
                                        AND WORK_STEP = '10') THEN 'Y'
                        ELSE 'N'
                   END DIFF_PART_FLAG
              FROM GDCLOPDA.U_LO_VW_OT_STOCK_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND BAR_NO = #{CASE_NO}  
               AND LOGI_CD = #{LOGI_CD}
        ]]>
    </select>
    <insert id="PR_PDA_KD_120_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_120_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PROC_CD}, #{CASE_NO}, #{BAR_NO}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_DT, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_120_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_120_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PROC_CD}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_130_S1" parameterType="hashmap" resultType="hashmap"> <!-- 세척완료 -->
        <![CDATA[
            SELECT A.CASE_NO,
                   A.PART_CD,
                   NVL(B.BOX_QTY,32) BOX_QTY,
                   A.CASE_QTY - A.BAD_QTY - A.WORK_QTY AS CASE_QTY,
                   CASE WHEN A.VENDOR_CD IS NULL THEN NULL
                        ELSE (SELECT GDCLOPDA.FN_GET_BOXNO('L', #{PLANT_CD}, A.VENDOR_CD, (SELECT CASE WHEN TO_NUMBER(NVL(COM_NM_KR,'600')) > TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')) THEN TO_CHAR(SYSDATE-1,'YYYYMMDD')
                                                                                                       ELSE TO_CHAR(SYSDATE,'YYYYMMDD')
                                                                                                  END PLANT_TIME
                                                                                             FROM GDCLOPDA.U_LO_COM_DET_DF
                                                                                            WHERE COM_TYPE_CD = 'PLANT_TIME'
                                                                                              AND COPORATE_CD = #{COPORATE_CD}
                                                                                              AND COM_CD = #{PLANT_CD}
                                                                                              AND USE_YN = 'Y')) FROM DUAL)
                   END BOX_NO
              FROM (SELECT MIN(CASE_NO) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS CASE_NO,
                           MIN(PART_CD) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS PART_CD,
                           MIN(VENDOR_CD) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS VENDOR_CD,
                           MIN(CASE_QTY) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS CASE_QTY,
                           MIN(BAD_QTY) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS BAD_QTY,
                           MIN(WORK_QTY) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS WORK_QTY
                      FROM GDCLOPDA.U_LO_VW_OT_WORK_MA 
                     WHERE COPORATE_CD = #{COPORATE_CD}
                       AND PLANT_CD = #{PLANT_CD}
                       AND LOGI_CD = #{LOGI_CD}
                       AND PROC_CD = #{PROC_CD}
                       AND WORK_STEP = '10') A,
                   GDCLOPDA.U_CC_PART_NO_MA B
             WHERE B.PLANT_CD(+) = #{PLANT_CD}
               AND A.PART_CD = B.PART_CD(+)
        ]]>
    </select>
    <select id="KD_130_S2" parameterType="hashmap" resultType="hashmap"> <!-- 세척완료 -->
        <![CDATA[
            SELECT DISTINCT(PART_CD)
              FROM (               
                    SELECT NVL(MAX(B.BOX_QTY), 32) BOX_QTY, COUNT(*) AS WORK_QTY, A.PART_CD
                      FROM GDCLOPDA.U_LO_VW_OT_WORK_SERIAL_MA A,
                           GDCLOPDA.U_CC_PART_NO_MA B
                     WHERE A.PLANT_CD = B.PLANT_CD(+)
                       AND A.PART_CD = B.PART_CD(+)
                       AND A.COPORATE_CD = #{COPORATE_CD}
                       AND A.PLANT_CD = #{PLANT_CD}
                       AND A.LOGI_CD = #{LOGI_CD}
                     GROUP BY A.PART_CD, A.BOX_NO
                   ) A
             WHERE BOX_QTY > WORK_QTY
        ]]>
    </select>
    <select id="KD_130_S3" parameterType="hashmap" resultType="hashmap"> <!-- 세척완료 -->
        <![CDATA[
            SELECT A.BOX_QTY,
                   A.BOX_NO,
                   A.PART_CD,
                   A.WORK_QTY,
                   A.DONE_FLAG,
                   B.CASE_NO,
                   B.CASE_QTY - B.BAD_QTY - B.WORK_QTY AS CASE_QTY
              FROM (               
                    SELECT NVL(MAX(B.BOX_QTY), 32) BOX_QTY, A.BOX_NO, A.PART_CD, COUNT(*) AS WORK_QTY, CASE WHEN NVL(MAX(B.BOX_QTY), 32) <= COUNT(*) THEN 'Y' ELSE 'N' END DONE_FLAG
                      FROM GDCLOPDA.U_LO_VW_OT_WORK_SERIAL_MA A,
                           GDCLOPDA.U_CC_PART_NO_MA B
                     WHERE A.PLANT_CD = B.PLANT_CD(+)
                       AND A.PART_CD = B.PART_CD(+)
                       AND A.COPORATE_CD = #{COPORATE_CD}
                       AND A.PLANT_CD = #{PLANT_CD}
                       AND A.LOGI_CD = #{LOGI_CD}
                       AND A.BOX_NO = NVL(SUBSTR(#{BOX_BAR_NO},
                                          10,
                                          INSTR(#{BOX_BAR_NO},':P')-10),#{BOX_BAR_NO})
                     GROUP BY A.PART_CD, A.BOX_NO
                   ) A,
                   (
                    SELECT MIN(CASE_NO) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS CASE_NO,
                           MIN(CASE_QTY) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS CASE_QTY,
                           MIN(BAD_QTY) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS BAD_QTY,
                           MIN(WORK_QTY) KEEP(DENSE_RANK FIRST ORDER BY WORK_DTTM) AS WORK_QTY
                      FROM GDCLOPDA.U_LO_VW_OT_WORK_MA
                     WHERE COPORATE_CD = #{COPORATE_CD}
                       AND PLANT_CD = #{PLANT_CD}
                       AND LOGI_CD = #{LOGI_CD}
                       AND PROC_CD = #{PROC_CD}
                       AND PART_CD = #{PART_CD}
                       AND WORK_STEP = '10'
                   ) B
        ]]>
    </select>
    <select id="KD_130_S4" parameterType="hashmap" resultType="hashmap"> <!-- 세척완료 부품식별표 발행-->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   B.BIN_NO,
                   A.BOX_NO,
                   A.PART_CD,
                   CASE WHEN #{LANG} = 'KO' THEN TRIM(B.PART_NM_KR)
                        WHEN #{LANG} = 'EN' THEN TRIM(B.PART_NM_EN)
                   ELSE TRIM(B.PART_NM_KR) END AS PART_NM,    
                   NVL(D.INSP_FLAG,'N') INSP_FLAG,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN TRIM(C.VENDOR_NM_KR)
                        WHEN #{LANG} = 'EN' THEN TRIM(C.VENDOR_NM_EN)
                   ELSE TRIM(C.VENDOR_NM_KR) END AS VENDOR_NM,        
                   A.BOX_BAR_NO,
                   (B.PART_KG * A.BAR_QTY) + B.PACK_KG AS BOX_KG,
                   B.PART_KG, 
                   A.BAR_QTY,
                   A.LOT_NO,
                   A.PLANT_CD,
                   CASE WHEN #{LANG} = 'KO' THEN TRIM(E.PLANT_NM_KR)
                        WHEN #{LANG} = 'EN' THEN TRIM(E.PLANT_NM_EN)
                   ELSE TRIM(E.PLANT_NM_KR) END AS PLANT_NM,   
                   A.PACK_DESC AS PRINT_MEMO,
                   A.EO_NO,
                   CASE WHEN #{LANG} = 'KO' THEN TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
                        WHEN #{LANG} = 'EN' THEN TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS')
                   ELSE TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') END AS PRINT_DT,
                   CASE WHEN #{LANG} = 'KO' THEN TO_CHAR(TO_DATE(A.MAKE_DT, 'YYYYMMDD'), 'YYYY-MM-DD')
                        WHEN #{LANG} = 'EN' THEN TO_CHAR(TO_DATE(A.MAKE_DT, 'YYYYMMDD'), 'DD/MM/YYYY')
                   ELSE TO_CHAR(TO_DATE(A.MAKE_DT, 'YYYYMMDD'), 'YYYY-MM-DD') END AS DELI_DT
              FROM GDCLOPDA.U_LO_BOX_VITUAL_MA A,
                   GDCLOPDA.U_CC_PART_NO_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C,
                   GDCLOPDA.U_CC_PART_BY_VENDOR_MA D,
                   GDCLOPDA.U_CC_PLANT_CD E
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.PART_CD = B.PART_CD(+)      
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.PLANT_CD = D.PLANT_CD(+)
               AND A.VENDOR_CD = D.VENDOR_CD(+)
               AND A.PART_CD = D.PART_CD(+) 
               AND A.PLANT_CD = E.PLANT_CD(+)
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.BOX_NO = #{BOX_NO}
        ]]>
    </select>
    <insert id="PR_PDA_KD_130_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_130_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PROC_CD}, #{LOGI_CD}, #{SERIAL_NO}, #{BOX_NO}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_CASE, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_PART, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_CQTY, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_QTY, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_DONE, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_130_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_130_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PROC_CD}, #{LOGI_CD}, #{BOX_NO}, #{BAD_QTY}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_CASE, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_PART, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_CQTY, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_QTY, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_130_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_130_C3
                (
                    #{MANUAL}, #{CHK_YN}, #{COPORATE_CD}, #{PLANT_CD}, #{PROC_CD}, #{LOGI_CD}, #{BOX_NO}, #{PART_CD}, #{SCAN_QTY}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_CASE, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_PART, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BOX, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_CQTY, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_QTY, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_140_S1" parameterType="hashmap" resultType="hashmap"> <!-- 출고처리 -->
        <![CDATA[
            SELECT A.PART_CD,
                   A.BOX_NO,
                   A.BAR_QTY,
                   CASE WHEN EXISTS (SELECT 1 FROM U_LO_VW_OT_OUT_MST_MA WHERE COPORATE_CD = A.COPORATE_CD AND PLANT_CD=A.PLANT_CD AND LOGI_CD=B.LOGI_CD AND BOX_NO=A.BOX_NO) THEN 'Y'
                        ELSE 'N'
                   END OUT_FLAG
              FROM GDCLOPDA.U_LO_BOX_VITUAL_MA A,
                   GDCLOPDA.U_LO_VW_OT_STOCK_MA B
             WHERE A.COPORATE_CD = B.COPORATE_CD(+)
               AND A.PLANT_CD = B.PLANT_CD(+)
               AND A.BOX_NO = B.CASE_NO(+)
               AND A.BOX_NO = B.BAR_NO(+)
               AND B.LOGI_CD(+) = #{LOGI_CD}
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <insert id="PR_PDA_KD_140_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_140_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOGI_CD}, #{BOX_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_145_S1" parameterType="hashmap" resultType="hashmap"> <!-- 출고처리 -->
        <![CDATA[
            SELECT CASE_NO,
                   GOOD_QTY,
                   VENDOR_CD,
                   PART_CD,
                   IN_DT
              FROM GDCLOPDA.U_LO_VW_OT_STOCK_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND LOGI_CD = #{LOGI_CD}
               AND BAR_NO = #{BAR_NO};
        ]]>
    </select>
    <insert id="PR_PDA_KD_145_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_145_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOGI_CD}, #{CASE_NO}, #{BAR_NO}, #{PART_CD}, #{VENDOR_CD}, #{ORG_QTY}, #{SCAN_QTY}, #{IN_DT}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_150_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_150_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOGI_CD}, #{CASE_NO}, #{BLNO}, #{CONT_NO}, #{BOX_NO}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_160_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_160_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BAR, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_160_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_160_C2
                (
                    #{CASE_NO}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LOGI_CD}, #{BOX_NO}, #{BAR_QTY}, #{SCAN_QTY}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_170_S1" parameterType="hashmap" resultType="hashmap"> <!--창고출고(CKD 사외) -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.FR_LOC_TP LOC_TP,
                   B.CASE_NO,
                   B.PART_CD,
                   B.BAR_QTY,
                   A.USE_FLAG,
                   A.OUT_FLAG
              FROM GDCLOPDA.U_LO_MAT_MOVE_ORD_MST A,
                   GDCLOPDA.U_LO_MAT_MOVE_ORD_DET B
             WHERE A.ORD_NO = B.ORD_NO
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.ORD_TYPE = 'RQ'
               AND A.ORD_NO = #{ORD_NO}
               ORDER BY A.WORK_SEQ;
        ]]>
    </select>
    <select id="KD_170_S2" parameterType="hashmap" resultType="hashmap"> <!--CASE 조회-->
        <![CDATA[
            SELECT CASE WHEN (SELECT COUNT(DISTINCT PART_CD)
                                FROM U_LO_VW_CASE_BOX_BAR_MA
                               WHERE CASE_NO = A.CASE_NO) = 1 THEN 'CASE'
                        ELSE 'EA' 
                   END UNIT,
                   A.COPORATE_CD,
                   A.CASE_NO,
                   A.USE_FLAG,
                   A.HOLD_FLAG,
                   CASE WHEN A.ORD_NO IS NULL THEN 'N'
                        ELSE 'Y'
                   END OUT_FLAG,
                   B.PART_CD,
                   B.BOX_NO,
                   A.BAR_QTY,
                   B.QTY
              FROM GDCLOPDA.U_LO_CASE_MST_MA A,
                   GDCLOPDA.U_LO_VW_CASE_BOX_BAR_MA B
             WHERE A.COPORATE_CD = B.COPORATE_CD(+)
               AND A.PLANT_CD = B.PLANT_CD(+)
               AND A.PART_CD = B.PART_CD(+)
               AND A.CASE_NO = B.CASE_NO(+)
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.LOC_TP = #{LOC_TP}
               AND A.CASE_BAR_NO = #{CASE_NO}
               AND A.VEND_CD = #{LOGI_CD};
        ]]>
    </select>
    <insert id="PR_PDA_KD_170_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_170_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{ORD_NO}, #{LOGI_CD}, #{CASE_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_180_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_180_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LOGI_CD}, #{NUMBER}, #{PART_CD}, #{UNIT}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_190_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_190_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LOGI_CD}, #{NUMBER}, #{PART_CD}, #{UNIT}, #{USER_ID}, #{USER_NM},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_200_S1" parameterType="hashmap" resultType="hashmap"> <!--사외창고입고(포장장) -->
        <![CDATA[
            SELECT A.PLANT_CD,
                   C.BOX_NO AS PALLET_NO,
                   B.PART_CD,
                   (SELECT COUNT(*)
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = A.PLANT_CD
                       AND PLT_NO = C.BOX_NO
                       AND USE_FLAG = 'Y'
                   ) MOVE_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N'
                        ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_LO_MOVE_DET_BAR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
                 AND A.COPORATE_CD = C.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.PLANT_CD = C.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.MOVE_NO = C.MOVE_NO 
               AND A.MOVE_CASE = 'C'
               AND NVL(A.CANCEL_FLAG, 'N') = 'N'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <insert id="PR_PDA_KD_200_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_200_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LOGI_CD}, #{MOVE_NO}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_200_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_200_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LOGI_CD}, #{MOVE_NO}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_205_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_205_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{LOGI_CD}, #{RACK_NO}, #{WH_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_210_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_210_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_220_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_220_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_229_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT DELI_NO
              FROM (SELECT DELI_NO
                      FROM GDCLOPDA.U_LO_VW_PLAN_MST_MA
                     WHERE COPORATE_CD = #{COPORATE_CD}
                       AND PLANT_CD = #{PLANT_CD}
                       AND DELI_STATUS = '01'
                     ORDER BY CREATE_DT)
             WHERE ROWNUM < 6
        ]]>
    </select>
    <select id="KD_229_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PART_CD, DELI_QTY
              FROM GDCLOPDA.U_LO_VW_PLAN_DET_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND PLANT_CD = #{PLANT_CD}
               AND DELI_NO = #{DELI_NO};
        ]]>
    </select>
    <insert id="PR_PDA_KD_229_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_229_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{DELI_NO}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_230_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLANT_CD,
                   B.PART_CD,
                   B.MOVE_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N'
                        ELSE 'Y'
                   END MOVE_YN,
                   C.DELI_NO
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_LO_VW_PLAN_MST_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.COPORATE_CD = C.COPORATE_CD
               AND A.PLANT_CD = C.PLANT_CD
               AND A.MOVE_NO = C.MOVE_NO
               AND A.MOVE_CASE = 'S'
               AND NVL(A.CANCEL_FLAG, 'N') = 'N'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <select id="KD_230_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PART_CD,
                   DELI_QTY
              FROM GDCLOPDA.U_LO_VW_PLAN_DET_BAR_MA
            WHERE PLANT_CD = #{PLANT_CD}
              AND DELI_NO = #{DELI_NO}
              AND BAR_NO = #{BAR_NO}
              AND PLT_NO = #{PLT_NO};
        ]]>
    </select>
    <insert id="PR_PDA_KD_230_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_230_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{DELI_NO}, #{MOVE_NO}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_240_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT DISTINCT(RET_NO)
              FROM GDCLOPDA.U_LO_RET_PROD_MAT_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND NVL(CNF_FLAG,'N') = 'N'
        ]]>
    </select>
    <select id="KD_240_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PART_CD,
                   TO_NUMBER(RET_QTY) AS RET_QTY
              FROM GDCLOPDA.U_LO_RET_PROD_MAT_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND RET_NO = #{RET_NO}
        ]]>
    </select>
    <insert id="PR_PDA_KD_240_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_240_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{RET_NO}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_250_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_250_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_253_S1" parameterType="hashmap" resultType="hashmap">
        <choose>
            <when test="PLT_NO != null and PLT_NO != ''">
                <![CDATA[
                    SELECT A.PART_CD,
                           B.TM_NO
                      FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                           GDCLOPDA.U_LO_VW_TM_MA B
                     WHERE A.PLANT_CD = B.PLANT_CD
                       AND A.PLT_NO = B.PLT_NO
                       AND A.USE_FLAG = B.USE_FLAG
                       AND A.COPORATE_CD = #{COPORATE_CD}
                       AND A.PLANT_CD = #{PLANT_CD}
                       AND A.PLT_NO = #{PLT_NO}
                       AND B.LOC_TP = #{LOC_TP}
                       AND A.USE_FLAG = 'Y'
                       AND NVL(B.HOLD_FLAG,'N')= 'N';
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    SELECT PART_CD,
                           TM_NO,
                           VENDOR_CD,
                           NVL(HOLD_FLAG,'N') HOLD_FLAG
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = #{PLANT_CD}
                       AND TM_NO = #{TM_NO}
                       AND LOC_TP = #{LOC_TP}
                       AND USE_FLAG = 'Y';
                ]]>
            </otherwise>
        </choose>
    </select>
    <insert id="PR_PDA_KD_253_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_253_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_255_S1" parameterType="hashmap" resultType="hashmap">
        <choose>
            <when test="PLT_NO != null and PLT_NO != ''">
                <![CDATA[
                    SELECT A.PLT_LOC_CD,
                           A.PART_CD,
                           B.TM_NO
                      FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                           GDCLOPDA.U_LO_VW_TM_MA B
                     WHERE A.PLANT_CD = B.PLANT_CD
                       AND A.PLT_NO = B.PLT_NO
                       AND A.USE_FLAG = B.USE_FLAG
                       AND A.COPORATE_CD = #{COPORATE_CD}
                       AND A.PLANT_CD = #{PLANT_CD}
                       AND A.PLT_NO = #{PLT_NO}
                       AND B.LOC_TP = #{LOC_TP}
                       AND A.USE_FLAG = 'Y'
                       AND NVL(B.HOLD_FLAG,'N')= 'Y';
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    SELECT TM_STATUS,
                           PART_CD,
                           TM_NO,
                           VENDOR_CD,
                           NVL(HOLD_FLAG,'N') HOLD_FLAG
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = #{PLANT_CD}
                       AND TM_NO = #{TM_NO}
                       AND LOC_TP = #{LOC_TP}
                       AND USE_FLAG = 'Y';
                ]]>
            </otherwise>
        </choose>
    </select>
    <insert id="PR_PDA_KD_255_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_255_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_257_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_257_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_260_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLT_LOC_CD,
                   A.PART_CD,
                   A.PACK_QTY,
                   B.TM_NO
              FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                   GDCLOPDA.U_LO_VW_TM_MA B
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.PLT_NO = B.PLT_NO(+)
               AND A.USE_FLAG = B.USE_FLAG(+)
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.PLT_NO = #{PLT_NO}
               AND A.USE_FLAG = 'Y';
        ]]>
    </select>
    <insert id="PR_PDA_KD_260_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_260_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_SEQ, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_260_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_260_C2
                (
                    #{PLT_SEQ}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PLT_NO}, #{TM_NO}, #{LOGI_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_265_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLT_LOC_CD,
                   A.PART_CD,
                   A.PACK_QTY,
                   B.TM_NO,
                   CASE WHEN EXISTS (SELECT 1 FROM GDCLOPDA.U_LO_RET_PROD_DET_LC_SY WHERE COPORATE_CD = A.COPORATE_CD AND TM_NO = B.TM_NO) THEN 'Y'
                        ELSE 'N'
                   END RETURN_FLAG
              FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                   GDCLOPDA.U_LO_VW_TM_MA B
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.PLT_NO = B.PLT_NO(+)
               AND A.USE_FLAG = B.USE_FLAG(+)
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.PLT_NO = #{PLT_NO}
               AND A.USE_FLAG = 'Y';
        ]]>
    </select>
    <insert id="PR_PDA_KD_265_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_265_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_SEQ, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_KD_265_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_265_C2
                (
                    #{PLT_SEQ}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PLT_NO}, #{TM_NO}, #{LOGI_CD}, #{RET_YN}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="KD_270_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLT_LOC_CD,
                   B.PART_CD
              FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                   GDCLOPDA.U_LO_VW_TM_MA B
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.PLT_NO = B.PLT_NO(+)
               AND A.USE_FLAG = B.USE_FLAG(+)
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.PLT_NO = #{PLT_NO}
               AND A.USE_FLAG = 'Y';
        ]]>
    </select>
    <insert id="PR_PDA_KD_270_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_KD_270_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_045_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.MOVE_CASE = 'C'
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <insert id="PR_PDA_PD_045_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_045_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_SEQ}, #{MOVE_NO}, #{MOVE_QTY}, #{BAR_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_046_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.MOVE_CASE = 'C'
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <select id="PD_046_S2" parameterType="hashmap" resultType="hashmap"> <!-- 시리얼 조회 -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   SERIAL_NO,
                   PART_CD
              FROM GDCSCADM.U_ST_BOX_SERIAL_MA
             WHERE PLANT_CD = #{PLANT_CD}
               AND BOX_NO = #{BOX_NO}
               AND SERIAL_NO = #{SERIAL_NO}
               AND USE_FLAG = 'Y'
               AND ROWNUM = 1
        ]]>
    </select>
    <insert id="PR_PDA_PD_046_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_046_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_SEQ}, #{MOVE_NO}, #{BOX_NO}, #{SERIAL_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_048_S1" parameterType="hashmap" resultType="hashmap"> <!-- 반출번호 조회 -->
        <![CDATA[
            SELECT A.COPORATE_CD,
                   A.PLANT_CD,
                   A.MOVE_NO,
                   A.MOVE_TYPE,
                   A.MOVE_GB,
                   A.MOVE_DESC,
                   B.MOVE_SEQ,
                   B.PART_CD,
                   B.MOVE_QTY,
                   A.VENDOR_CD,
                   CASE WHEN #{LANG} = 'KO' THEN C.VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN C.VENDOR_NM_EN
                        ELSE C.VENDOR_NM_LC
                   END VENDOR_NM,
                   0 AS SCAN_QTY,
                   CASE WHEN A.SCAN_DT IS NULL THEN 'N' ELSE 'Y'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B,
                   GDCLOPDA.U_CC_VENDOR_MA C
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.PLANT_CD = C.PLANT_CD(+)
               AND A.VENDOR_CD = C.VENDOR_CD(+)
               AND A.MOVE_CASE = 'C'
               AND NVL(A.CANCEL_FLAG, 'N') != 'Y'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <select id="PD_048_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   LOC_TP,
                   BAR_NO,
                   BOX_BAR_NO,
                   PART_CD,
                   PACK_QTY,
                   NVL(HOLD_FLAG,'N') HOLD_FLAG
              FROM GDCLOPDA.U_LO_PROD_BAR_MA
             WHERE OUT_DT IS NULL
               AND SCAN_DTTM IS NULL
               AND USE_FLAG = 'Y'
               AND P_BAR_GB = 'MS'
               AND PLANT_CD = #{PLANT_CD}
               AND LOC_TP = #{LOC_TP}
               AND BOX_BAR_NO = #{BOX_BAR_NO}
        ]]>
    </select>
    <select id="PD_048_S3" parameterType="hashmap" resultType="hashmap">
            SELECT PART_CD,
                   LOT_NO
              FROM GDCSCADM.U_LINE_INSP
             WHERE INSP_TYPE = 'BAR'
               AND INSP_VALUE = #{BOX_BAR_NO}
               AND ROWNUM = 1
    </select>
    <insert id="PR_PDA_PD_048_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_048_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_SEQ}, #{MOVE_NO}, #{MOVE_QTY}, #{BAR_NO}, #{CHK_SERIAL_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_065_S1" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회  (경주SCM) -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   PART_CD,
                   MIN(SERIAL_NO) MIN_SERIAL_NO,
                   MAX(SERIAL_NO) MAX_SERIAL_NO,
                   (SELECT COUNT(*)
                      FROM GDCSCADM.U_ST_BOX_SERIAL_MA
                     WHERE PLANT_CD = A.PLANT_CD
                       AND PART_CD = A.PART_CD
                       AND BOX_NO = A.BOX_NO
                       AND USE_FLAG = 'Y'
                     GROUP BY BOX_NO) CNT,
                   (SELECT BAR_NO FROM U_LO_BAR_BOX_MAP_MA WHERE PLANT_CD = A.PLANT_CD AND BOX_NO = A.BOX_NO AND PART_CD = A.PART_CD AND USE_FLAG = 'Y') MAP_BAR_NO
              FROM GDCSCADM.U_ST_BOX_SERIAL_MA A
             WHERE BOX_NO = #{BOX_NO}
               AND PART_CD = #{PART_CD}
               AND USE_FLAG = 'Y'
             GROUP BY COPORATE_CD, PLANT_CD, BOX_NO, PART_CD;
        ]]>
    </select>
    <insert id="PR_PDA_PD_065_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_065_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{MAP_BAR_NO}, #{LOC_TP}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_065_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_065_C2
                (
                    #{REPACK_FLAG}, #{COPORATE_CD}, #{PLANT_CD}, #{BAR_NO}, #{LOC_TP}, #{BOX_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_066_S1" parameterType="hashmap" resultType="hashmap"> <!-- 부품식별표 조회  (경주SCM) -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   PART_CD,
                   (SELECT COUNT(*)
                      FROM GDCSCADM.U_ST_BOX_SERIAL_MA
                     WHERE PLANT_CD = A.PLANT_CD
                       AND PART_CD = A.PART_CD
                       AND BOX_NO = A.BOX_NO
                       AND USE_FLAG = 'Y'
                     GROUP BY BOX_NO) CNT,
                   (SELECT BAR_NO FROM U_LO_BAR_BOX_MAP_MA WHERE PLANT_CD = A.PLANT_CD AND BOX_NO = A.BOX_NO AND PART_CD = A.PART_CD AND USE_FLAG = 'Y') MAP_BAR_NO
              FROM GDCSCADM.U_ST_BOX_SERIAL_MA A
             WHERE BOX_NO = #{BOX_NO}
               AND PART_CD = #{PART_CD}
               AND USE_FLAG = 'Y'
             GROUP BY COPORATE_CD, PLANT_CD, BOX_NO, PART_CD;
        ]]>
    </select>
    <select id="PD_066_S2" parameterType="hashmap" resultType="hashmap"> <!-- 시리얼 조회 -->
        <![CDATA[
            SELECT COPORATE_CD,
                   PLANT_CD,
                   BOX_NO,
                   SERIAL_NO,
                   PART_CD,
                   POP_CD,
                   LINE_CD
              FROM GDCSCADM.U_ST_BOX_SERIAL_MA
             WHERE PLANT_CD = #{PLANT_CD}
               AND BOX_NO = #{BOX_NO}
               AND SERIAL_NO = #{SERIAL_NO}
               AND USE_FLAG = 'Y'
               AND ROWNUM = 1
        ]]>
    </select>
    <insert id="PR_PDA_PD_066_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_066_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{BOX_NO}, #{SERIAL_NO}, #{TO_BOX_NO}, #{POP_CD}, #{LINE_CD}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_067_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_067_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{LINE_CD}, #{TM_NO}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_072_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT CASE WHEN #{LANG} = 'KO' THEN VENDOR_NM_KR
                        WHEN #{LANG} = 'EN' THEN VENDOR_NM_EN
                        ELSE VENDOR_NM_LC
                   END VENDOR_NM
              FROM GDCLOPDA.U_CC_VENDOR_MA
             WHERE USE_FLAG = 'Y'
               AND VENDOR_CD = #{VENDOR_CD}
               AND ROWNUM = 1;
        ]]>
    </select>
    <select id="PD_072_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'OT_LOC_TP'
               AND COPORATE_CD = #{COPORATE_CD}
               AND COM_CD_REF1 = #{VENDOR_CD}
               AND USE_YN = 'Y';
        ]]>
    </select>
    <select id="PD_072_S3" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT COM_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END COM_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD = 'OW_SECTOR'
               AND COPORATE_CD = #{COPORATE_CD}
               AND COM_CD_REF1 = #{VENDOR_CD}
               AND USE_YN = 'Y';
        ]]>
    </select>
    <select id="PD_072_S4" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT PART_CD
              FROM GDCLOPDA.U_LO_TM_MA
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND TM_NO = #{TM_NO}
               AND PART_CD IS NOT NULL
               AND ROWNUM = 1;
        ]]>
    </select>
    <select id="PD_072_S5" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT TAG_NO,
                   PART_CD,
                   PART_NM,
                   PACK_QTY,
                   (SELECT COUNT(*) FROM U_LO_OT_TM_MA WHERE VENDOR_CD = A.VENDOR_CD AND BAR_NO = A.TAG_NO) PACK_CNT
              FROM U_LO_OT_PRT_MA A
             WHERE COPORATE_CD = #{COPORATE_CD}
               AND VENDOR_CD = #{VENDOR_CD}
               AND TAG_NO = #{TAG_NO};
        ]]>
    </select>
    <insert id="PR_PDA_PD_072_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_072_C1
                (
                    #{VENDOR_CD}, #{TM_NO}, #{PART_CD, jdbcType=VARCHAR}, #{OT_LOC_TP}, #{SAVE_LOC}, #{TAG}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_073_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_073_C1
                (
                    #{VENDOR_CD}, SUBSTR(#{TM_NO},0,12), #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_074_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_074_C1
                (
                    #{VENDOR_CD}, SUBSTR(#{TM_NO},0,12), #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_075_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_075_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{VENDOR_CD}, #{SERIAL_NO}, SUBSTR(#{TM_NO},0,12), #{SAVE_LOC}, #{PART_CD}, #{MEMO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_076_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT COPORATE_CD,
                   VENDOR_CD,
                   TM_NO,
                   SERIAL_NO,
                   SAVE_LOC,
                   OT_LOC_TP,
                   PART_CD,
                   NVL(HOLD_FLAG,'N') AS HOLD_FLAG,
                   NVL(OUT_FLAG,'N') AS OUT_FLAG
              FROM GDCLOPDA.U_LO_OT_TM_MA
             WHERE VENDOR_CD = #{VENDOR_CD}
               AND BAR_NO = #{BAR_NO};
        ]]>
    </select>
    <insert id="PR_PDA_PD_076_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_076_C1
                (
                    #{VENDOR_CD}, SUBSTR(#{TM_NO},0,12), #{PART_CD}, #{TAG}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_077_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_077_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{VENDOR_CD}, #{SERIAL_NO}, SUBSTR(#{TM_NO},0,12), #{SAVE_LOC}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_090_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.PLANT_CD,
                   B.PART_CD,
                   B.MOVE_QTY,
                   CASE WHEN EXISTS (SELECT BOX_NO
                                       FROM GDCLOPDA.U_LO_MOVE_DET_BAR_MA
                                      WHERE COPORATE_CD = A.COPORATE_CD
                                        AND PLANT_CD = A.PLANT_CD
                                        AND MOVE_NO = #{MOVE_NO}) THEN 'Y'
                        ELSE 'N'
                   END MOVE_YN
              FROM GDCLOPDA.U_LO_MOVE_MST_MA A,
                   GDCLOPDA.U_LO_MOVE_DET_MA B
             WHERE A.COPORATE_CD = B.COPORATE_CD
               AND A.PLANT_CD = B.PLANT_CD
               AND A.MOVE_NO = B.MOVE_NO
               AND A.MOVE_CASE = 'C'
               AND NVL(A.CANCEL_FLAG, 'N') = 'N'
               AND A.MOVE_NO = #{MOVE_NO}
               ORDER BY B.MOVE_SEQ;
        ]]>
    </select>
    <insert id="PR_PDA_PD_090_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_090_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{MOVE_NO}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_094_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT A.LOC_TP,
                   A.PART_CD,
                   (SELECT COUNT(*)
                      FROM GDCLOPDA.U_LO_VW_TM_HI_SAV_BAR_MAP
                     WHERE PLANT_CD = A.PLANT_CD
                       AND BAR_NO = A.BAR_NO
                       AND USE_FLAG = 'Y'
                   ) MAP_QTY
              FROM GDCLOPDA.U_LO_VW_TM_HI_SAV_BAR A
             WHERE A.PLANT_CD = #{PLANT_CD}
               AND A.BAR_NO = #{BAR_NO};
        ]]>
    </select>
    <insert id="PR_PDA_PD_094_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_094_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PART_CD}, #{BAR_NO}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_094_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_094_C2
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BAR, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_094_C3" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_094_C3
                (
                    #{BAR_NO}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PART_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_095_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   PART_CD
              FROM GDCLOPDA.U_LO_VW_TM_HI_PROD
             WHERE PLANT_CD = #{PLANT_CD}
               AND TM_NO = #{TM_NO}
        ]]>
    </select>
    <insert id="PR_PDA_PD_095_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_095_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_SEQ, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_095_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_095_C2
                (
                    #{PLT_SEQ}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PLT_NO}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_096_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT COM_CD AS SAVE_LOC_CD,
                   CASE WHEN #{LANG} = 'KO' THEN COM_NM_KR
                        WHEN #{LANG} = 'EN' THEN COM_NM_EN
                        ELSE COM_NM_LC
                   END SAVE_LOC_NM
              FROM GDCLOPDA.U_LO_COM_DET_DF
             WHERE COM_TYPE_CD ='SAVE_LOC'
               AND COPORATE_CD = #{COPORATE_CD}
               AND COM_CD_REF1 = #{PLANT_CD}
               AND USE_YN = 'Y'
             ORDER BY COM_SORT;
        ]]>
    </select>
    <select id="PD_096_S2" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT LOC_TP,
                   PART_CD
              FROM GDCLOPDA.U_LO_VW_TM_HI_PROD
             WHERE PLANT_CD = #{PLANT_CD}
               AND TM_NO = #{TM_NO}
        ]]>
    </select>
    <insert id="PR_PDA_PD_096_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_096_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_SEQ, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_BAR, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_096_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_096_C2
                (
                    #{PLT_SEQ}, #{BAR_NO}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{SAVE_LOC}, #{PLT_NO}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_100_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_100_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_110_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_110_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_105_S1" parameterType="hashmap" resultType="hashmap">
        <choose>
            <when test="PLT_NO != null and PLT_NO != ''">
                <![CDATA[
                    SELECT A.PART_CD,
                           B.TM_NO
                      FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                           GDCLOPDA.U_LO_VW_TM_MA B
                     WHERE A.PLANT_CD = B.PLANT_CD
                       AND A.PLT_NO = B.PLT_NO
                       AND A.USE_FLAG = B.USE_FLAG
                       AND A.COPORATE_CD = #{COPORATE_CD}
                       AND A.PLANT_CD = #{PLANT_CD}
                       AND A.PLT_NO = #{PLT_NO}
                       AND B.LOC_TP = #{LOC_TP}
                       AND A.USE_FLAG = 'Y'
                       AND NVL(B.HOLD_FLAG,'N')= 'N';
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    SELECT PART_CD,
                           TM_NO,
                           NVL(HOLD_FLAG,'N') HOLD_FLAG,
                           NVL(USE_FLAG,'N') USE_FLAG
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = #{PLANT_CD}
                       AND TM_NO = #{TM_NO}
                       AND LOC_TP = #{LOC_TP};
                ]]>
            </otherwise>
        </choose>
    </select>
    <insert id="PR_PDA_PD_105_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_105_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_107_S1" parameterType="hashmap" resultType="hashmap">
        <choose>
            <when test="PLT_NO != null and PLT_NO != ''">
                <![CDATA[
                    SELECT A.PLT_LOC_CD,
                           A.PART_CD,
                           B.TM_NO
                      FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                           GDCLOPDA.U_LO_VW_TM_MA B
                     WHERE A.PLANT_CD = B.PLANT_CD
                       AND A.PLT_NO = B.PLT_NO
                       AND A.USE_FLAG = B.USE_FLAG
                       AND A.COPORATE_CD = #{COPORATE_CD}
                       AND A.PLANT_CD = #{PLANT_CD}
                       AND A.PLT_NO = #{PLT_NO}
                       AND B.LOC_TP = #{LOC_TP}
                       AND A.USE_FLAG = 'Y'
                       AND NVL(B.HOLD_FLAG,'N')= 'Y';
                ]]>
            </when>
            <otherwise>
                <![CDATA[
                    SELECT TM_STATUS,
                           PART_CD,
                           TM_NO,
                           NVL(HOLD_FLAG,'N') HOLD_FLAG,
                           NVL(USE_FLAG,'N') USE_FLAG
                      FROM GDCLOPDA.U_LO_VW_TM_MA
                     WHERE PLANT_CD = #{PLANT_CD}
                       AND TM_NO = #{TM_NO}
                       AND LOC_TP = #{LOC_TP};
                ]]>
            </otherwise>
        </choose>
    </select>
    <insert id="PR_PDA_PD_107_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_107_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_120_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
            SELECT NVL(A.PLT_LOC_CD,'A01') PLT_LOC_CD,
                   A.PART_CD,
                   A.PACK_QTY,
                   B.TM_NO
              FROM GDCLOPDA.U_LO_VW_PLT_MST_MA A,
                   GDCLOPDA.U_LO_VW_TM_MA B
             WHERE A.PLANT_CD = B.PLANT_CD(+)
               AND A.PLT_NO = B.PLT_NO(+)
               AND A.USE_FLAG = B.USE_FLAG(+)
               AND A.COPORATE_CD = #{COPORATE_CD}
               AND A.PLANT_CD = #{PLANT_CD}
               AND A.PLT_NO = #{PLT_NO}
               AND A.USE_FLAG = 'Y';
        ]]>
    </select>
    <insert id="PR_PDA_PD_120_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_120_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{PLT_NO}, #{PART_CD}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR},
                    #{RTN_SEQ, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_120_C2" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_120_C2
                (
                    #{PLT_SEQ}, #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PLT_NO}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_130_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
               SELECT PART_CD,
                      PLT_NO
                 FROM U_LO_RET_PROD_MOVE_IO_MA A
                WHERE PLANT_CD = #{PLANT_CD}
                  AND WORK_IO = 'OUT'
                  AND NOT EXISTS ( SELECT 1 
                                     FROM U_LO_RET_PROD_MOVE_IO_MA 
                                    WHERE PLANT_CD = A.PLANT_CD
                                      AND PLT_NO = A.PLT_NO
                                      AND ERP_IF_FLAG <> 'X'
                                      AND WORK_IO = 'IN' )
        ]]>
    </select>
    <insert id="PR_PDA_PD_130_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_130_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{PLT_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <insert id="PR_PDA_PD_140_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_PD_140_C1
                (
                    #{COPORATE_CD}, #{PLANT_CD}, #{LOC_TP}, #{TM_NO}, #{USER_ID},
                    
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
    <select id="PD_150_S1" parameterType="hashmap" resultType="hashmap">
        <![CDATA[
          SELECT A.TM_NO,
                 A.PART_CD,
                 CASE WHEN #{LANG} = 'KO' THEN PART_NM_KR
                      WHEN #{LANG}  = 'EN' THEN PART_NM_EN 
                      ELSE PART_NM_LC
                 END PART_NM,
                 A.SERIAL_NO,
                 CASE WHEN #{LANG} = 'KO' THEN NVL(C.VENDOR_NM_KR, ' ')
                      WHEN #{LANG} = 'EN' THEN NVL(C.VENDOR_NM_EN, ' ')
                            ELSE NVL(C.VENDOR_NM_LC, ' ')                   
                 END VENDOR_NM,                                                         
                 A.USE_FLAG,
                 A.HOLD_FLAG,
                 A.PLANT_CD,
                 A.LOC_TP,
                 A.PLT_NO,
                 (SELECT CASE WHEN #{LANG} = 'KO' THEN NVL(COM_NM_KR, A.P_TRANS_TYPE) WHEN #{LANG} = 'EN' THEN NVL(COM_NM_EN, A.P_TRANS_TYPE) ELSE NVL(COM_NM_LC, A.P_TRANS_TYPE)
                 END 
                 FROM GDCLOPDA.U_LO_COM_DET_DF WHERE COM_TYPE_CD = 'P_TRANSTYPE' AND COM_CD = A.P_TRANS_TYPE AND COPORATE_CD = A.COPORATE_CD) TRANS_TYPE_NM,
                 SUBSTR(A.TRANS_KEY,0,4)||'-'||SUBSTR(A.TRANS_KEY,5,2)||'-'||SUBSTR(A.TRANS_KEY,7,2)||' '||SUBSTR(A.TRANS_KEY,9,2)||':'||SUBSTR(A.TRANS_KEY,11,2)||':'||SUBSTR(A.TRANS_KEY,13,2) AS TRANS_KEY           
            FROM GDCLOPDA.U_LO_VW_TM_MA AS A,
                 GDCLOPDA.U_CC_PART_NO_MA AS B,
                 GDCLOPDA.U_CC_VENDOR_MA AS C
           WHERE A.PLANT_CD = B.PLANT_CD 
             AND A.PART_CD = B.PART_CD 
             AND A.VENDOR_CD = C.VENDOR_CD
             AND A.COPORATE_CD = #{COPORATE_CD}  
             AND TM_NO = #{TM_NO} 
        ]]>
    </select>
    <insert id="PR_PDA_ST_990_C1" parameterType="hashmap" statementType="CALLABLE">
        <![CDATA[
            {
                CALL GDCLOPDA.PR_PDA_ST_990_C1
                (
                    #{BOX_BAR_NO}, 
                    #{USER_ID},
                    #{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
                )
            }
        ]]>
    </insert>
</mapper>